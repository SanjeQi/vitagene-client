{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/Diet.js\";\nimport React, { Component } from 'react';\nimport { WordCloud } from \"word-cloud-react\";\nimport { Parallax } from 'react-scroll-parallax';\nimport Slide from '@material-ui/core/Slide';\n\nvar Diet =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Diet, _Component);\n\n  function Diet() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Diet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Diet)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.generateFoodMap = function () {\n      var array = [];\n\n      _this.props.getStack().map(function (vitamin) {\n        return _this.props.vitamins.map(function (vit) {\n          if (vitamin === vit.name) {\n            vit.sources.split(',').map(function (source) {\n              if (array.find(function (val) {\n                return val.word === source;\n              })) {\n                var x = array.findIndex(function (val) {\n                  return val.word === source;\n                });\n                array[x] = {\n                  word: source,\n                  value: array[x].value + 1\n                };\n              } else {\n                array.push({\n                  word: source,\n                  value: 2\n                });\n              }\n            });\n          }\n        });\n      });\n\n      console.log(array);\n      return array;\n    };\n\n    return _this;\n  }\n\n  _createClass(Diet, [{\n    key: \"render\",\n    value: function render() {\n      var checked = this.props.checked;\n      var num = 1000;\n      return React.createElement(\"div\", {\n        className: \"result-food\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Recommended Foods\"), React.createElement(Slide, Object.assign({\n        direction: \"down\",\n        in: checked,\n        style: {\n          transformOrigin: '0 0 0'\n        }\n      }, checked ? {\n        timeout: num\n      } : {}, {\n        mountOnEnter: true,\n        unmountOnExit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Parallax, {\n        offsetYMax: 25,\n        offsetYMin: -35,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(WordCloud, {\n        width: \"auto\",\n        maxFont: 60,\n        minFont: 16,\n        logFunc: function logFunc(x) {\n          return Math.log2(x) * 30;\n        },\n        data: this.generateFoodMap(),\n        clickEvent: function clickEvent(x) {\n          return console.log(x.word);\n        },\n        color: ['#71803F', '#F8AC1D', '#598EC0', '#E2543E', '#1A3051', '#F46F73', '#8A87BB', '#56CFCD', '#297373', '#FF8552', '#F2E863', '#C2F8CB', '#3A6EA5', '#FF6700', '#C0C0C0', '#4E4381', '#523CBD'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Diet;\n}(Component);\n\nexport default Diet;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/Diet.js"],"names":["React","Component","WordCloud","Parallax","Slide","Diet","generateFoodMap","array","props","getStack","map","vitamin","vitamins","vit","name","sources","split","source","find","val","word","x","findIndex","value","push","console","log","checked","num","transformOrigin","timeout","Math","log2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { WordCloud } from \"word-cloud-react\";\n\nimport { Parallax } from 'react-scroll-parallax'\nimport Slide from '@material-ui/core/Slide';\n\nclass Diet extends Component {\n\n    // getStack = () => {\n    //     const stack = []\n    //     for (const i of this.props.report)  {\n    //         if (this.getScore(i.trait) < 2 )\n    //     { \n    //         switch (i.trait) {\n    //             case \"Folate\":\n    //             stack.push(\"Folic Acid\");\n    //             default:stack.push(i.trait) }\n    //         }\n    //     }\n    //     console.log(stack)\n    //     return stack\n        \n    // }\n    // getScore = name => {\n    //     return this.props.report.find(r => r.trait === `${name}`).score\n    //     }\n\n    generateFoodMap  = () => {\n        let array = []\n        this.props.getStack().map(vitamin => \n            this.props.vitamins.map(vit => {\n                if (vitamin === vit.name) {\n                    vit.sources.split(',').map(source => {\n                        if (array.find(val => val.word === source)) {\n                            let x = array.findIndex(val => val.word === source) \n                            array[x] = {word: source, value: array[x].value + 1}\n                        }\n                    \n                        else { \n                            array.push({word: source, value: 2})\n                        }\n                    })\n               \n                 }\n            })\n        )\n        console.log(array)\n        return array \n       \n    }\n \n   render() {\n\n    const {checked} = this.props\n    let num = 1000\n    \n     return (\n       <div className=\"result-food\">\n       <h3>Recommended Foods</h3>\n       <Slide  direction=\"down\" in={checked}  style={{ transformOrigin: '0 0 0' }}\n                                {...(checked ? { timeout: num } : {})} mountOnEnter unmountOnExit>\n       <Parallax offsetYMax={25} offsetYMin={-35}>\n       <WordCloud \n            width={\"auto\"} \n            maxFont={60} \n            minFont={16} \n            logFunc={(x)=> Math.log2(x) * 30} \n            data={this.generateFoodMap()} \n            clickEvent={(x)=>console.log(x.word)} \n            color={['#71803F', '#F8AC1D','#598EC0','#E2543E','#1A3051','#F46F73','#8A87BB','#56CFCD','#297373','#FF8552','#F2E863','#C2F8CB','#3A6EA5','#FF6700','#C0C0C0','#4E4381','#523CBD',]}/>\n           </Parallax>\n           </Slide>\n      \n       </div>\n     );\n   }\n }\n\nexport default  Diet;\n"]},"metadata":{},"sourceType":"module"}