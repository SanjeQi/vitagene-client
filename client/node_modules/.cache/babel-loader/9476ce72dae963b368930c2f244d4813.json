{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/VitaminStack.js\";\n\nimport React from 'react';\nimport logo from \"../logo.svg\";\nimport { Parallax } from 'react-scroll-parallax';\n\nvar VitaminStack = function VitaminStack(_ref) {\n  var report = _ref.report,\n      vitamins = _ref.vitamins;\n\n  var getTrait = function getTrait(name) {\n    return report.find(function (r) {\n      return r.trait === \"\".concat(name);\n    });\n  };\n\n  var getScore = function getScore(name) {\n    return report.find(function (r) {\n      return r.trait === \"\".concat(name);\n    }).score;\n  };\n\n  var getVitaminInfo = function getVitaminInfo(name) {\n    return vitamins.find(function (r) {\n      return r.name === \"\".concat(name);\n    });\n  };\n\n  var getStack = function getStack() {\n    var stack = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = report[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var i = _step.value;\n\n        if (getScore(i.trait) < 2) {\n          switch (i.trait) {\n            case \"Folate\":\n              stack.push(\"Folic Acid\");\n              break;\n\n            case \"Skin Pigmentation\":\n              stack.push(\"Vitamin D\");\n              break;\n\n            case \"Sleep duration\":\n              stack.push(\"Melatonin\");\n              break;\n\n            default:\n              stack.push(i.trait);\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return stack;\n  };\n\n  handleChange = function handleChange() {\n    _this.setState(function (state) {\n      return {\n        checked: !state.checked\n      };\n    });\n  };\n\n  return React.createElement(Parallax, {\n    offsetYMax: 25,\n    offsetYMin: -35,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"result\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Your Vitamin Stack\"), getStack().map(function (vitamin) {\n    return React.createElement(\"div\", {\n      className: \"info-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      checked: checked,\n      onChange: _this.handleChange,\n      \"aria-label\": \"Collapse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Slide, {\n      direction: \"up\",\n      in: checked,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, vitamin), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, getVitaminInfo(vitamin).sources), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, getVitaminInfo(vitamin).rda), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, getVitaminInfo(vitamin).benefits), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, getVitaminInfo(vitamin).toxicity)));\n  })));\n};\n\nexport default VitaminStack;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/VitaminStack.js"],"names":["React","Parallax","VitaminStack","report","vitamins","getTrait","name","find","r","trait","getScore","score","getVitaminInfo","getStack","stack","i","push","handleChange","setState","state","checked","map","vitamin","sources","rda","benefits","toxicity"],"mappings":"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","sourcesContent":["import React from 'react'\nimport logo from '../logo.svg';\nimport { Parallax } from 'react-scroll-parallax'\n\nconst VitaminStack = ({report, vitamins}) => {\n\nconst getTrait = name => {\n    return report.find(r => r.trait === `${name}`)\n}\n\n\nconst getScore = name => {\n   return report.find(r => r.trait === `${name}`).score\n}\n\nconst getVitaminInfo = name => {\n    return vitamins.find(r => r.name === `${name}`)\n\n}\n\n \n\nconst getStack = () => {\n    const stack = []\n    for (const i of report)  {\n        if (getScore(i.trait) < 2 )\n       { \n        switch (i.trait) {\n            case \"Folate\":\n            stack.push(\"Folic Acid\");\n            break;\n            case \"Skin Pigmentation\":\n            stack.push(\"Vitamin D\");\n            break;\n            case \"Sleep duration\":\n            stack.push(\"Melatonin\");\n            break;\n            default:stack.push(i.trait) }\n        }\n    }\n    return stack\n}\n\nhandleChange = () => {\n    this.setState(state => ({ checked: !state.checked }));\n  }\n\n\n\nreturn (\n\n    <Parallax\n    offsetYMax={25}\n    offsetYMin={-35}\n    >\n<div className=\"result\">\n    <h2>Your Vitamin Stack</h2>\n     {getStack().map(vitamin => \n\n      <div className=\"info-container\"> \n       <Switch checked={checked} onChange={this.handleChange} aria-label=\"Collapse\" />\n          <Slide direction=\"up\" in={checked} mountOnEnter unmountOnExit>\n          <p>{vitamin}</p>\n          <p>{getVitaminInfo(vitamin).sources}</p>\n          <p>{getVitaminInfo(vitamin).rda}</p>\n          <p>{getVitaminInfo(vitamin).benefits}</p>\n          <p>{getVitaminInfo(vitamin).toxicity}</p>\n          </Slide>\n      </div>\n      )}\n\n    \n</div>\n</Parallax>\n    )\n}\n export default VitaminStack"]},"metadata":{},"sourceType":"module"}