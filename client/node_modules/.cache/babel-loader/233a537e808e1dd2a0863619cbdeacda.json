{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/Diet.js\";\nimport React, { Component } from 'react';\nimport { WordCloud } from \"word-cloud-react\";\nimport { Parallax } from 'react-scroll-parallax';\nimport Slide from '@material-ui/core/Slide';\n\nvar Diet =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Diet, _Component);\n\n  function Diet() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Diet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Diet)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.generateFoodMap = function () {\n      var array = [];\n\n      _this.props.getStack().map(function (vitamin) {\n        return _this.props.vitamins.map(function (vit) {\n          if (vitamin === vit.name) {\n            vit.sources.split(',').map(function (source) {\n              if (array.find(function (val) {\n                return val.word === source;\n              })) {\n                var x = array.findIndex(function (val) {\n                  return val.word === source;\n                });\n                array[x] = {\n                  word: source,\n                  value: array[x].value + 1\n                };\n              } else {\n                array.push({\n                  word: source,\n                  value: 2\n                });\n              }\n            });\n          }\n        });\n      });\n\n      console.log(array);\n      return array;\n    };\n\n    return _this;\n  }\n\n  _createClass(Diet, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onPage = _this$props.onPage,\n          page = _this$props.page;\n      var num = 1000;\n      var checked = onPage('food');\n      return React.createElement(\"div\", {\n        className: \"result-food\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"result-food-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Recommended Foods\"), checked ? React.createElement(\"div\", {\n        className: \"word-cloud\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(WordCloud, {\n        width: \"auto\",\n        maxFont: 60,\n        minFont: 16,\n        logFunc: function logFunc(x) {\n          return Math.log2(x) * 30;\n        },\n        data: this.generateFoodMap(),\n        clickEvent: function clickEvent(x) {\n          return console.log(x.word);\n        },\n        color: ['#71803F', '#F8AC1D', '#598EC0', '#E2543E', '#1A3051', '#F46F73', '#8A87BB', '#56CFCD', '#297373', '#FF8552', '#F2E863', '#C2F8CB', '#3A6EA5', '#FF6700', '#C0C0C0', '#4E4381', '#523CBD'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"section08\",\n        className: \"demo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        onClick: this.props.scrollToTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), \"Back to top\")));\n    }\n  }]);\n\n  return Diet;\n}(Component);\n\nexport default Diet;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/Diet.js"],"names":["React","Component","WordCloud","Parallax","Slide","Diet","generateFoodMap","array","props","getStack","map","vitamin","vitamins","vit","name","sources","split","source","find","val","word","x","findIndex","value","push","console","log","onPage","page","num","checked","Math","log2","scrollToTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { WordCloud } from \"word-cloud-react\";\n\nimport { Parallax } from 'react-scroll-parallax'\nimport Slide from '@material-ui/core/Slide';\n\nclass Diet extends Component {\n\n    // getStack = () => {\n    //     const stack = []\n    //     for (const i of this.props.report)  {\n    //         if (this.getScore(i.trait) < 2 )\n    //     { \n    //         switch (i.trait) {\n    //             case \"Folate\":\n    //             stack.push(\"Folic Acid\");\n    //             default:stack.push(i.trait) }\n    //         }\n    //     }\n    //     console.log(stack)\n    //     return stack\n        \n    // }\n    // getScore = name => {\n    //     return this.props.report.find(r => r.trait === `${name}`).score\n    //     }\n\n    generateFoodMap  = () => {\n        let array = []\n        this.props.getStack().map(vitamin => \n            this.props.vitamins.map(vit => {\n                if (vitamin === vit.name) {\n                    vit.sources.split(',').map(source => {\n                        if (array.find(val => val.word === source)) {\n                            let x = array.findIndex(val => val.word === source) \n                            array[x] = {word: source, value: array[x].value + 1}\n                        }\n                    \n                        else { \n                            array.push({word: source, value: 2})\n                        }\n                    })\n               \n                 }\n            })\n        )\n        console.log(array)\n        return array \n       \n    }\n \n   render() {\n\n    const {onPage, page} = this.props\n    let num = 1000\n    const checked = onPage('food')\n\n     return (\n       <div className=\"result-food\">\n       <div className=\"result-food-container\">\n            <h2>Recommended Foods</h2>\n           {checked ?  <div className=\"word-cloud\">\n                <WordCloud \n                        width={\"auto\"} \n                        maxFont={60} \n                        minFont={16} \n                        logFunc={(x)=> Math.log2(x) * 30} \n                        data={this.generateFoodMap()} \n                        clickEvent={(x)=>console.log(x.word)} \n                        color={['#71803F', '#F8AC1D','#598EC0','#E2543E','#1A3051','#F46F73','#8A87BB','#56CFCD','#297373','#FF8552','#F2E863','#C2F8CB','#3A6EA5','#FF6700','#C0C0C0','#4E4381','#523CBD',]}/>\n                \n                    </div>\n            :\n            <div></div>\n        }\n        </div>\n        <div id=\"section08\" className=\"demo\">\n                        <p onClick={this.props.scrollToTop} ><span></span><span></span><span></span>Back to top</p>\n                    </div>\n       </div>\n     );\n   }\n }\n\nexport default  Diet;\n"]},"metadata":{},"sourceType":"module"}