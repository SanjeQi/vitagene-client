{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/YourGenome.js\";\nimport React from 'react';\nimport logo from \"../logo.svg\";\n\nvar YourGenome = function YourGenome(_ref) {\n  var report = _ref.report;\n\n  var getTrait = function getTrait(name) {\n    return report.find(function (r) {\n      return r.trait === \"\".concat(name);\n    });\n  };\n\n  var getScore = function getScore(name) {\n    return report.find(function (r) {\n      return r.trait === \"\".concat(name);\n    }).score;\n  };\n\n  var getResultInfo = function getResultInfo(vitamin) {\n    switch (vitamin.score) {\n      case 0:\n        return 'Lower blood serum level';\n        break;\n\n      case 1:\n        return 'Slightly lower serum level';\n        break;\n\n      case 2:\n        return 'Intermediate';\n        break;\n\n      case 3:\n        return 'Slightly higher serum level';\n        break;\n\n      case 4:\n        return 'Higher blood serum level';\n        break;\n    }\n  };\n\n  var getStack = function getStack() {\n    var stack = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = report[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var i = _step.value;\n\n        if (getScore(i.trait) < 2) {\n          switch (i.trait) {\n            case \"Folate\":\n              stack.push(\"Folic Acid\");\n              break;\n\n            case \"Skin Pigmentation\":\n              stack.push(\"Vitamin D\");\n              break;\n\n            case \"Sleep duration\":\n              stack.push(\"Melatonin\");\n              break;\n\n            default:\n              stack.push(i.trait);\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return stack;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"result\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Your phenotype Results\"), report.map(function (vitamin) {\n    React.createElement(\"div\", {\n      className: \"info-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, vitamin.trait), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Score: \", vitamin.score, \" - \", getResultInfo(vitamin)), \"}}\");\n  }));\n};\n\nexport default YourGenome;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/YourGenome.js"],"names":["React","YourGenome","report","getTrait","name","find","r","trait","getScore","score","getResultInfo","vitamin","getStack","stack","i","push","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAc;AAAA,MAAZC,MAAY,QAAZA,MAAY;;AAEjC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AACrB,WAAOF,MAAM,CAACG,IAAP,CAAY,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,KAAF,eAAeH,IAAf,CAAJ;AAAA,KAAb,CAAP;AACH,GAFD;;AAKA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAAJ,IAAI,EAAI;AACtB,WAAOF,MAAM,CAACG,IAAP,CAAY,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,KAAF,eAAeH,IAAf,CAAJ;AAAA,KAAb,EAAwCK,KAA/C;AACF,GAFD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,OAAO,EAAI;AAC7B,YAAQA,OAAO,CAACF,KAAhB;AACI,WAAK,CAAL;AACC,eAAO,yBAAP;AACD;;AACA,WAAK,CAAL;AACA,eAAQ,4BAAR;AACA;;AACA,WAAK,CAAL;AACA,eAAO,cAAP;AACA;;AACA,WAAK,CAAL;AACC,eAAO,6BAAP;AACD;;AACA,WAAK,CAAL;AACC,eAAO,0BAAP;AACD;AAfJ;AAkBH,GAnBD;;AAuBA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,QAAMC,KAAK,GAAG,EAAd;AADmB;AAAA;AAAA;;AAAA;AAEnB,2BAAgBX,MAAhB,8HAAyB;AAAA,YAAdY,CAAc;;AACrB,YAAIN,QAAQ,CAACM,CAAC,CAACP,KAAH,CAAR,GAAoB,CAAxB,EACD;AACC,kBAAQO,CAAC,CAACP,KAAV;AACI,iBAAK,QAAL;AACAM,cAAAA,KAAK,CAACE,IAAN,CAAW,YAAX;AACA;;AACA,iBAAK,mBAAL;AACAF,cAAAA,KAAK,CAACE,IAAN,CAAW,WAAX;AACA;;AACA,iBAAK,gBAAL;AACAF,cAAAA,KAAK,CAACE,IAAN,CAAW,WAAX;AACA;;AACA;AAAQF,cAAAA,KAAK,CAACE,IAAN,CAAWD,CAAC,CAACP,KAAb;AAVZ;AAWC;AACJ;AAjBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBnB,WAAOM,KAAP;AACH,GAnBD;;AAwBA,SAEA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEMX,MAAM,CAACc,GAAP,CAAW,UAAAL,OAAO,EAAI;AAEtB;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,OAAO,CAACJ,KAAZ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWI,OAAO,CAACF,KAAnB,SAA6BC,aAAa,CAACC,OAAD,CAA1C,CAFJ;AASA,GAXA,CAFN,CAFA;AAoBC,CA9ED;;AA+EC,eAAeV,UAAf","sourcesContent":["import React from 'react'\nimport logo from '../logo.svg';\n\n\nconst YourGenome = ({report}) => {\n\nconst getTrait = name => {\n    return report.find(r => r.trait === `${name}`)\n}\n\n\nconst getScore = name => {\n   return report.find(r => r.trait === `${name}`).score\n}\n\nconst getResultInfo = vitamin => {\n    switch (vitamin.score) {\n        case 0:\n         return 'Lower blood serum level'\n        break;\n        case 1:\n        return  'Slightly lower serum level'\n        break;\n        case 2:\n        return 'Intermediate'\n        break;\n        case 3:\n         return 'Slightly higher serum level'\n        break;\n        case 4:\n         return 'Higher blood serum level'\n        break;\n    }\n\n}\n\n \n\nconst getStack = () => {\n    const stack = []\n    for (const i of report)  {\n        if (getScore(i.trait) < 2 )\n       { \n        switch (i.trait) {\n            case \"Folate\":\n            stack.push(\"Folic Acid\");\n            break;\n            case \"Skin Pigmentation\":\n            stack.push(\"Vitamin D\");\n            break;\n            case \"Sleep duration\":\n            stack.push(\"Melatonin\");\n            break;\n            default:stack.push(i.trait) }\n        }\n    }\n    return stack\n}\n\n\n\n\nreturn (\n\n<div className=\"result\">\n    <h2>Your phenotype Results</h2>\n     {report.map(vitamin => {\n\n      <div className=\"info-container\"> \n          <p>{vitamin.trait}</p>\n          <p>Score: {vitamin.score} - {getResultInfo(vitamin)}</p>\n          \n          }}\n    \n          \n          \n      </div>\n     })}\n\n    \n</div>\n    )\n}\n export default YourGenome"]},"metadata":{},"sourceType":"module"}