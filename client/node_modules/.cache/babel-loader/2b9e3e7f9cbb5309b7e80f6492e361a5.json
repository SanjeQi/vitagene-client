{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/src/components/Diet.js\";\nimport React, { Component } from 'react';\nimport { WordCloud } from \"word-cloud-react\";\nimport { Parallax } from 'react-scroll-parallax';\nimport Slide from '@material-ui/core/Slide';\n\nvar Diet =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Diet, _Component);\n\n  function Diet() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Diet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Diet)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.generateFoodMap = function () {\n      var array = [];\n\n      _this.props.getStack().map(function (vitamin) {\n        return _this.props.vitamins.map(function (vit) {\n          if (vitamin === vit.name) {\n            vit.sources.split(', ').map(function (source) {\n              if (array.find(function (val) {\n                return val.word === source;\n              })) {\n                var x = array.findIndex(function (val) {\n                  return val.word === source;\n                });\n                array[x] = {\n                  word: source,\n                  value: array[x].value + 1\n                };\n              } else {\n                array.push({\n                  word: source,\n                  value: 2\n                });\n              }\n            });\n          }\n        });\n      });\n\n      return _this.props.vegan ? array.filter(function (food) {\n        return !['salmon', 'dairy products', 'beef', 'liver', 'milk', 'cheese', 'sardines', 'meat', 'seafood', 'poultry', 'beef liver', 'mackerel', 'clams', 'eggs', 'fortified milk', 'tuna', 'egg yolks'].includes(food.word);\n      }) : array;\n    };\n\n    _this.windowSize = function () {\n      var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      return width > 768 ? 30 : 25;\n    };\n\n    return _this;\n  }\n\n  _createClass(Diet, [{\n    key: \"render\",\n    value: function render() {\n      var num = this.windowSize();\n      var _this$props = this.props,\n          onPage = _this$props.onPage,\n          page = _this$props.page,\n          pageOpen = _this$props.pageOpen;\n      var checked = pageOpen('diet');\n      return React.createElement(\"div\", {\n        className: \"result-food\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"result-food-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        id: \"diet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Recommended Foods\"), checked ? React.createElement(\"div\", {\n        className: \"word-cloud\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(WordCloud, {\n        className: \"words\",\n        width: \"auto\",\n        maxFont: 60,\n        minFont: 16,\n        logFunc: function logFunc(x) {\n          return Math.log2(x) * num;\n        },\n        data: this.generateFoodMap(),\n        clickEvent: function clickEvent(x) {\n          return console.log(x.word);\n        },\n        color: ['#71803F', '#F8AC1D', '#598EC0', '#E2543E', '#1A3051', '#F46F73', '#8A87BB', '#56CFCD', '#297373', '#FF8552', '#F2E863', '#C2F8CB', '#FF6700', '#C0C0C0', '#523CBD'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })) : null), React.createElement(\"div\", {\n        id: \"section08\",\n        className: \"demo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        onClick: this.props.scrollToTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \"Back to top\")));\n    }\n  }]);\n\n  return Diet;\n}(Component);\n\nexport default Diet;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/src/components/Diet.js"],"names":["React","Component","WordCloud","Parallax","Slide","Diet","generateFoodMap","array","props","getStack","map","vitamin","vitamins","vit","name","sources","split","source","find","val","word","x","findIndex","value","push","vegan","filter","food","includes","windowSize","width","window","innerWidth","document","documentElement","clientWidth","body","num","onPage","page","pageOpen","checked","Math","log2","console","log","scrollToTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { WordCloud } from \"word-cloud-react\";\n\nimport { Parallax } from 'react-scroll-parallax'\nimport Slide from '@material-ui/core/Slide';\n\nclass Diet extends Component {\n\n\n    generateFoodMap  = () => {\n        let array = []\n        this.props.getStack().map(vitamin => \n            this.props.vitamins.map(vit => {\n                if (vitamin === vit.name) {\n                    vit.sources.split(', ').map(source => {\n                        if (array.find(val => val.word === source)) {\n                            let x = array.findIndex(val => val.word === source) \n                            array[x] = {word: source, value: array[x].value + 1}\n                        }\n                    \n                        else { \n                            array.push({word: source, value: 2})\n                        }\n                    })\n               \n                 }\n            })\n        )\n        return this.props.vegan ?\n            array.filter(food => \n                !['salmon', 'dairy products', 'beef', 'liver', 'milk', 'cheese', \n                'sardines','meat', 'seafood', 'poultry', 'beef liver', 'mackerel','clams','eggs', 'fortified milk', 'tuna','egg yolks'].includes(food.word))\n        : \n            array \n    }\n\n    windowSize = () => {\n        const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n        return width > 768 ? 30 : 25\n    }\n \n   render() {\n        const num = this.windowSize()\n        const {onPage, page, pageOpen} = this.props\n        const checked = pageOpen('diet')\n        return (\n            <div className=\"result-food\">\n                <div className=\"result-food-container\">\n                    <h2 id=\"diet\">Recommended Foods</h2>\n                    {checked ?  \n                        <div className=\"word-cloud\">\n                            <WordCloud className=\"words\"\n                                width={\"auto\"} \n                                maxFont={60} \n                                minFont={16} \n                                logFunc={(x)=> Math.log2(x) * num} \n                                data={this.generateFoodMap()} \n                                clickEvent={(x)=>console.log(x.word)} \n                                color={['#71803F', '#F8AC1D','#598EC0','#E2543E','#1A3051','#F46F73',\n                                '#8A87BB','#56CFCD','#297373','#FF8552','#F2E863','#C2F8CB','#FF6700',\n                                '#C0C0C0','#523CBD',]}/>\n                        </div>\n                    :\n                        null\n                    }\n                </div>\n                <div id=\"section08\" className=\"demo\">\n                    <p onClick={this.props.scrollToTop} ><span></span><span></span><span></span>Back to top</p>\n                </div>\n            </div>\n        );\n   }\n }\n\nexport default Diet;\n"]},"metadata":{},"sourceType":"module"}