{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/src/components/YourGenome.js\";\nimport React, { Component } from 'react';\nimport logo from \"../logo.svg\";\nimport { Parallax } from 'react-scroll-parallax';\nimport CanvasJSReact from '../canvasjs.react';\nimport Button from '@material-ui/core/Button';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Slide from '@material-ui/core/Slide';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nvar YourGenome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YourGenome, _Component);\n\n  function YourGenome() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, YourGenome);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(YourGenome)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getResultInfo = function (vitamin) {\n      switch (vitamin.score) {\n        case 0:\n          return 'Lower blood serum level';\n          break;\n\n        case 1:\n          return 'Slightly lower serum level';\n          break;\n\n        case 2:\n          return 'Intermediate';\n          break;\n\n        case 3:\n          return 'Slightly higher serum level';\n          break;\n\n        case 4:\n          return 'Higher blood serum level';\n          break;\n      }\n    };\n\n    _this.populateChart = function () {\n      var array = [];\n\n      _this.props.report.map(function (vitamin) {\n        return array.push({\n          y: vitamin.score + 1,\n          label: vitamin.trait\n        });\n      });\n\n      return array;\n    };\n\n    _this.windowSize = function () {\n      var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      return width > 768 ? 2200 : 1650;\n    };\n\n    return _this;\n  }\n\n  _createClass(YourGenome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.onPage('genome')) {\n        document.getElementById(\"genome\").scrollIntoView({\n          behavior: \"smooth\",\n          block: \"start\"\n        });\n      }\n    }\n  }, {\n    key: \"addSymbols\",\n    value: function addSymbols(e) {\n      var suffixes = [\"\", \"K\", \"M\", \"B\"];\n      var order = Math.max(Math.floor(Math.log(e.value) / Math.log(1000)), 0);\n      if (order > suffixes.length - 1) order = suffixes.length - 1;\n      var suffix = suffixes[order];\n      return CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          report = _this$props.report,\n          onPage = _this$props.onPage,\n          setPage = _this$props.setPage;\n      var checked = onPage('genome');\n      var num = this.windowSize();\n      var options = {\n        animationEnabled: true,\n        animationDuration: 2000,\n        backgroundColor: \"rgba(255,0,0,0)\",\n        colorSet: \"colorSet2\",\n        theme: \"light2\",\n        title: {\n          fontColor: \"black\",\n          fontFamily: \"raleway\"\n        },\n        axisX: {\n          reversed: true,\n          fontFamily: \"raleway\",\n          labelFontFamily: \"raleway\",\n          labelFontColor: \"white\"\n        },\n        axisY: {\n          title: \"Typical blood serum concentration for your genotype (0-4)\",\n          labelFormatter: this.addSymbols,\n          labelFontFamily: \"raleway\",\n          labelFontColor: \"white\",\n          titleFontFamily: \"raleway\",\n          titleFontColor: \"white\",\n          titleFontSize: 14\n        },\n        data: [{\n          type: \"bar\",\n          dataPoints: _toConsumableArray(this.populateChart())\n        }]\n      };\n      var style = {\n        borderRadius: 3,\n        border: '1px solid white',\n        color: 'white',\n        height: 48,\n        padding: '0 30px' // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n\n      };\n      return React.createElement(\"div\", {\n        className: \"result-pheno\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, console.log('here'), React.createElement(\"h2\", {\n        id: \"genome\",\n        name: \"genome\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Your phenotype Results\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"These are the results of your natural blood serum concentration of each tested micronutrient based on your genotype. Each nutrient is assigned a score that corresponds to the following: \"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"1 - Lower blood serum level\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"2 - Slightly lower serum level\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"3 - Intermediate\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"4 - Slightly higher serum level\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"5 - Higher blood serum level\")), React.createElement(\"div\", {\n        className: \"info-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(CanvasJSChart, {\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"section07\",\n        className: \"demo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        onClick: function onClick() {\n          setPage('vitamins');\n          {\n            /*this.props.history.push('/vitamins')*/\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), \"Click to scroll\")));\n    }\n  }]);\n\n  return YourGenome;\n}(Component);\n\nexport default YourGenome;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/src/components/YourGenome.js"],"names":["React","Component","Parallax","CanvasJSReact","Button","classNames","PropTypes","Slide","CanvasJS","CanvasJSChart","YourGenome","getResultInfo","vitamin","score","populateChart","array","props","report","map","push","y","label","trait","windowSize","width","window","innerWidth","document","documentElement","clientWidth","body","onPage","getElementById","scrollIntoView","behavior","block","e","suffixes","order","Math","max","floor","log","value","length","suffix","formatNumber","pow","setPage","checked","num","options","animationEnabled","animationDuration","backgroundColor","colorSet","theme","title","fontColor","fontFamily","axisX","reversed","labelFontFamily","labelFontColor","axisY","labelFormatter","addSymbols","titleFontFamily","titleFontColor","titleFontSize","data","type","dataPoints","style","borderRadius","border","color","height","padding","console"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from '../logo.svg';\nimport { Parallax } from 'react-scroll-parallax';\nimport CanvasJSReact from '../canvasjs.react'\nimport Button from '@material-ui/core/Button'\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Slide from '@material-ui/core/Slide';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\n\nclass YourGenome extends Component {\n\n    getResultInfo = vitamin => {\n        switch (vitamin.score) {\n            case 0:\n            return 'Lower blood serum level'\n            break;\n            case 1:\n            return  'Slightly lower serum level'\n            break;\n            case 2:\n            return 'Intermediate'\n            break;\n            case 3:\n            return 'Slightly higher serum level'\n            break;\n            case 4:\n            return 'Higher blood serum level'\n            break;\n        }\n\n    }\n\n\n    populateChart = () => {\n        let array = []\n        this.props.report.map(vitamin =>\n            array.push({y: vitamin.score+1, label: vitamin.trait})\n        )\n        return array\n    }\n    \n\n    componentDidMount(){\n        if (this.props.onPage('genome')) {\n            document.getElementById(\"genome\").scrollIntoView({behavior: \"smooth\", block: \"start\"})\n        }\n    }\n    addSymbols(e){\n        var suffixes = [\"\", \"K\", \"M\", \"B\"];\n        var order = Math.max(Math.floor(Math.log(e.value) / Math.log(1000)), 0);\n        if(order > suffixes.length - 1)\n            order = suffixes.length - 1;\n        var suffix = suffixes[order];\n        return CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;\n    }\n\n    windowSize = () => {\n        const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n        return width > 768 ? 2200 : 1650\n    }\n    \n\n\n    render () {\n        const {report, onPage,setPage} = this.props\n        const checked = onPage('genome')\n        const num = this.windowSize()\n\n        const options = {\n            animationEnabled: true,\n            animationDuration: 2000,\n            backgroundColor: \"rgba(255,0,0,0)\",\n            colorSet:  \"colorSet2\",\n            theme: \"light2\",\n            title:{\n                fontColor: \"black\",\n                fontFamily: \"raleway\",\n            },\n            axisX: {\n                \n                reversed: true,\n                fontFamily: \"raleway\",\n                labelFontFamily: \"raleway\",\n                labelFontColor: \"white\",\n            \n                \n            },\n            axisY: {\n                title: \"Typical blood serum concentration for your genotype (0-4)\",\n                labelFormatter: this.addSymbols,\n                labelFontFamily: \"raleway\",\n                labelFontColor: \"white\",\n                titleFontFamily: \"raleway\",\n                titleFontColor: \"white\",\n                titleFontSize: 14\n            },\n            data: [{\n                type: \"bar\",\n                dataPoints: [...this.populateChart()]\n        }]\n    }\n\n\n\n    const style = {\n        \n\n            borderRadius: 3,\n            border: '1px solid white',\n            color: 'white',\n            height: 48,\n            padding: '0 30px',\n            // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    };\n\n  \n\n\n    return (\n      \n        <div className=\"result-pheno\">\n        {console.log('here')}\n       \n            <h2 id=\"genome\" name=\"genome\">Your phenotype Results</h2> \n            <p>These are the results of your natural blood serum concentration of each tested micronutrient based on your genotype. Each nutrient is assigned a score that corresponds to the following: </p>\n            <ul>\n                <li>1 - Lower blood serum level</li> \n                <li>2 - Slightly lower serum level</li> \n                <li>3 - Intermediate</li> \n                <li>4 - Slightly higher serum level</li> \n                <li>5 - Higher blood serum level</li> \n            </ul>\n            <div  className=\"info-container\"> \n            {/* <Slide  direction=\"down\" in={checked}  style={{ transformOrigin: '0 0 0' }}\n                                    mountOnEnter > */}\n                <CanvasJSChart options ={options}/>\n                {/* </Slide> */}\n            </div>\n            \n            <div id=\"section07\" className=\"demo\">\n                <p onClick={() => {setPage('vitamins'); {/*this.props.history.push('/vitamins')*/}}}><span></span><span></span><span></span>Click to scroll</p>\n                \n            </div>\n         \n        </div>\n  \n        \n        )}\n        \n}\n\n\n export default YourGenome\n"]},"metadata":{},"sourceType":"module"}