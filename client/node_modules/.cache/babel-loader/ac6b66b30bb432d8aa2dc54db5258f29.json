{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/VitaminStack.js\";\nimport React from 'react';\nimport logo from \"../logo.svg\";\nimport { Parallax } from 'react-scroll-parallax';\nimport Switch from '@material-ui/core/Switch';\nimport Slide from '@material-ui/core/Slide';\n\nvar VitaminStack =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VitaminStack, _React$Component);\n\n  function VitaminStack() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VitaminStack);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VitaminStack)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.vitaminAmazonLink = function () {\n      var link = 'http://www.amazon.co.uk/gp/aws/cart/add.html?AssociateTag=lolao-21';\n      var counter = 1;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.getStack()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var vitamin = _step.value;\n          link = link + \"&ASIN.\".concat(counter, \"=\").concat(_this.getVitaminInfo(vitamin).code, \"&Quantity.\").concat(counter, \"=1\");\n          ++counter;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return link;\n    };\n\n    _this.getTrait = function (name) {\n      return _this.props.report.find(function (r) {\n        return r.trait === \"\".concat(name);\n      });\n    };\n\n    _this.getScore = function (name) {\n      return _this.props.report.find(function (r) {\n        return r.trait === \"\".concat(name);\n      }).score;\n    };\n\n    _this.getVitaminInfo = function (name) {\n      return _this.props.vitamins.find(function (r) {\n        return r.name === \"\".concat(name);\n      });\n    };\n\n    _this.avoidStack = function () {\n      var badStack = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _this.props.report[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var i = _step2.value;\n\n          if (_this.getScore(i.trait) === 4) {\n            badStack.push(i.trait);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return badStack;\n    };\n\n    _this.getStack = function () {\n      var stack = [];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = _this.props.report[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var i = _step3.value;\n\n          if (_this.getScore(i.trait) < 2) {\n            switch (i.trait) {\n              case \"Folate\":\n                stack.push(\"Folic Acid\");\n                break;\n\n              case \"Skin Pigmentation\":\n                stack.push(\"Vitamin D\");\n                break;\n\n              case \"Sleep duration\":\n                stack.push(\"Melatonin\");\n                break;\n\n              default:\n                stack.push(i.trait);\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return stack;\n    };\n\n    return _this;\n  }\n\n  _createClass(VitaminStack, [{\n    key: \"render\",\n    value: function render() {\n      this.vitaminAmazonLink();\n      var getStack = this.getStack,\n          getVitaminInfo = this.getVitaminInfo;\n      var checked = this.props;\n      var num = 1000;\n      return React.createElement(Parallax, {\n        offsetYMax: 25,\n        offsetYMin: -35,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Your Vitamin Stack\"), React.createElement(Button, {\n        onClick: this.basket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Purchase vitamin stack\"), React.createElement(\"div\", {\n        className: \"flex=container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, getStack().map(function (vitamin) {\n        return React.createElement(Slide, Object.assign({\n          direction: \"down\",\n          in: checked,\n          style: {\n            transformOrigin: '0 0 0'\n          }\n        }, checked ? {\n          timeout: num\n        } : {}, {\n          mountOnEnter: true,\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"flex-child\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, vitamin), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, getVitaminInfo(vitamin).sources.split(',').map(function (source) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, source);\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"RDA: \", getVitaminInfo(vitamin).rda), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, getVitaminInfo(vitamin).benefits), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, getVitaminInfo(vitamin).deficiency.split(',').map(function (deficiency) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, deficiency);\n        }))));\n      }, num = num + 100))));\n    }\n  }]);\n\n  return VitaminStack;\n}(React.Component);\n\nexport default VitaminStack;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/VitaminStack.js"],"names":["React","Parallax","Switch","Slide","VitaminStack","vitaminAmazonLink","link","counter","getStack","vitamin","getVitaminInfo","code","getTrait","name","props","report","find","r","trait","getScore","score","vitamins","avoidStack","badStack","i","push","stack","checked","num","basket","map","transformOrigin","timeout","sources","split","source","rda","benefits","deficiency","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport logo from '../logo.svg';\nimport { Parallax } from 'react-scroll-parallax'\nimport Switch from '@material-ui/core/Switch';\nimport Slide from '@material-ui/core/Slide';\n\nclass VitaminStack extends React.Component  {\n\n\n    vitaminAmazonLink = () => {\n      let link =  'http://www.amazon.co.uk/gp/aws/cart/add.html?AssociateTag=lolao-21'\n    let counter = 1\n\n   \n    for (const vitamin of this.getStack()){\n       link = link + `&ASIN.${counter}=${this.getVitaminInfo(vitamin).code}&Quantity.${counter}=1`\n        \n       ++counter}\n       return link\n    }\n\n    getTrait = name => {\n        return this.props.report.find(r => r.trait === `${name}`)\n    }\n\n\n    getScore = name => {\n    return this.props.report.find(r => r.trait === `${name}`).score\n    }\n\n    getVitaminInfo = name => {\n        return this.props.vitamins.find(r => r.name === `${name}`)\n\n    }\n\n    avoidStack = () => {\n        const badStack  = []\n        for (const i of this.props.report)  {\n            if (this.getScore(i.trait) === 4 ) {\n                badStack.push(i.trait)\n            }\n        }\n        return badStack\n    }\n\n    getStack = () => {\n        const stack = []\n        for (const i of this.props.report)  {\n            if (this.getScore(i.trait) < 2 )\n        { \n            switch (i.trait) {\n                case \"Folate\":\n                stack.push(\"Folic Acid\");\n                break;\n                case \"Skin Pigmentation\":\n                stack.push(\"Vitamin D\");\n                break;\n                case \"Sleep duration\":\n                stack.push(\"Melatonin\");\n                break;\n                default:stack.push(i.trait) }\n            }\n        }\n        return stack\n    }\n\n\n\n    render () {\n        this.vitaminAmazonLink()\n        const {getStack, getVitaminInfo} = this\n        const checked = this.props\n        let num = 1000\n        return (\n\n            <Parallax offsetYMax={25} offsetYMin={-35}>\n                <div className=\"result\">\n                    <h2>Your Vitamin Stack</h2>\n                    <Button onClick={this.basket}>Purchase vitamin stack</Button>\n                    <div className=\"flex=container\">\n                        {getStack().map(vitamin => \n                        \n                            \n                    \n                            <Slide  direction=\"down\" in={checked}  style={{ transformOrigin: '0 0 0' }}\n                                {...(checked ? { timeout: num } : {})} mountOnEnter unmountOnExit>\n                                <div className=\"flex-child\"> \n                                    <p>{vitamin}</p>\n                                    <ul>{getVitaminInfo(vitamin).sources.split(',').map( source =>\n                                        <li>{source}</li>)}\n                                        </ul>\n                                    <p>RDA: {getVitaminInfo(vitamin).rda}</p>\n                                    <p>{getVitaminInfo(vitamin).benefits}</p>\n                                    <ul>{getVitaminInfo(vitamin).deficiency.split(',').map(deficiency =>\n                                        <li>{deficiency}</li>)}\n                                    </ul>\n                                </div>\n                            </Slide>\n                            ,\n                            num = num + 100\n                    )}\n                    </div>\n                </div>\n            </Parallax>\n        )\n    }\n}\n export default VitaminStack"]},"metadata":{},"sourceType":"module"}