{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/VitaminStack.js\";\nimport React from 'react';\nimport logo from \"../logo.svg\";\nimport { Parallax } from 'react-scroll-parallax';\nimport Switch from '@material-ui/core/Switch';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport Zoom from '@material-ui/core/Zoom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nvar requireContext = require('require-context');\n\nvar VitaminStack =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VitaminStack, _React$Component);\n\n  function VitaminStack() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VitaminStack);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VitaminStack)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedVitamin: null,\n      boxOpen: false\n    };\n\n    _this.vitaminAmazonLink = function () {\n      var link = 'http://www.amazon.co.uk/gp/aws/cart/add.html?AssociateTag=lolao-21';\n      var counter = 1;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.props.getStack()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var vitamin = _step.value;\n          link = link + \"&ASIN.\".concat(counter, \"=\").concat(_this.getVitaminInfo(vitamin).code, \"&Quantity.\").concat(counter, \"=1\");\n          ++counter;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return link;\n    };\n\n    _this.getTrait = function (name) {\n      return _this.props.report.find(function (r) {\n        return r.trait === \"\".concat(name);\n      });\n    };\n\n    _this.getVitaminInfo = function (name) {\n      return _this.props.vitamins.find(function (r) {\n        return r.name === \"\".concat(name);\n      });\n    };\n\n    _this.avoidStack = function () {\n      var badStack = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _this.props.report[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var i = _step2.value;\n\n          if (_this.props.getScore(i.trait) === 4) {\n            badStack.push(i.trait);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return badStack;\n    };\n\n    _this.goToBasket = function () {\n      var url = _this.vitaminAmazonLink();\n\n      window.open(url, \"_blank\");\n    };\n\n    _this.importAll = function (r) {\n      var images = {};\n      r.keys().map(function (item, index) {\n        images[item.replace('./', '')] = r(item);\n      });\n      console.log(images);\n      return images;\n    };\n\n    _this.expandInfo = function (vitamin) {\n      _this.setState({\n        selectedVitamin: vitamin,\n        boxOpen: true\n      });\n    };\n\n    _this.closeBox = function () {\n      _this.setState({\n        selectedVitamin: null,\n        boxOpen: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(VitaminStack, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.vitaminAmazonLink();\n      var _this$props = this.props,\n          onPage = _this$props.onPage,\n          page = _this$props.page,\n          getStack = _this$props.getStack,\n          getScore = _this$props.getScore;\n      var getVitaminInfo = this.getVitaminInfo;\n      var _this$state = this.state,\n          boxOpen = _this$state.boxOpen,\n          selectedVitamin = _this$state.selectedVitamin;\n      var num = 1000;\n      var checked = onPage('vitaminstack');\n      var images = this.importAll(require.context('../images', true, /^\\.\\/.*\\.(jpg|png|gif)$/));\n      return (// <Parallax offsetYMax={25} offsetYMin={-35}>\n        React.createElement(\"div\", {\n          className: \"result\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Your Vitamin Stack\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Based on your genotype, these are your suggested daily supplements.\"), React.createElement(\"div\", {\n          className: \"flex-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, getStack().map(function (vitamin) {\n          return React.createElement(Slide, Object.assign({\n            direction: \"down\",\n            in: checked,\n            style: {\n              transformOrigin: '0 0 0'\n            }\n          }, {\n            timeout: num += 300\n          }, {\n            mountOnEnter: true,\n            unmountOnExit: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            onClick: function onClick() {\n              return _this2.expandInfo(vitamin);\n            },\n            className: \"flex-child\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"vitstructure\",\n            src: images[\"\".concat(getVitaminInfo(vitamin).image)],\n            alt: \"chemical structure of \".concat(getVitaminInfo(vitamin).name),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          })), React.createElement(Card, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, React.createElement(CardContent, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, vitamin))), React.createElement(CardActions, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, React.createElement(Button, {\n            onClick: function onClick() {\n              return _this2.expandInfo(vitamin);\n            },\n            size: \"small\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, \"More info\")));\n        })), boxOpen ? React.createElement(Zoom, {\n          in: boxOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          onClick: this.closeBox,\n          className: \"vitamin-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, selectedVitamin), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"RDA: \", getVitaminInfo(selectedVitamin).rda), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, getVitaminInfo(selectedVitamin).benefits), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, getVitaminInfo(selectedVitamin).deficiency.split(',').map(function (deficiency) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, deficiency);\n        })))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: this.goToBasket,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Purchase vitamin stack\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          id: \"section07\",\n          className: \"demo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          onClick: this.props.scrollToLast,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }), \"Click to scroll\"))) // </Parallax>\n\n      );\n    }\n  }]);\n\n  return VitaminStack;\n}(React.Component);\n\nexport default VitaminStack;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/VitaminStack.js"],"names":["React","Parallax","Switch","Slide","Button","Zoom","Card","CardActions","CardContent","Typography","requireContext","require","VitaminStack","state","selectedVitamin","boxOpen","vitaminAmazonLink","link","counter","props","getStack","vitamin","getVitaminInfo","code","getTrait","name","report","find","r","trait","vitamins","avoidStack","badStack","i","getScore","push","goToBasket","url","window","open","importAll","images","keys","map","item","index","replace","console","log","expandInfo","setState","closeBox","onPage","page","num","checked","context","transformOrigin","timeout","image","rda","benefits","deficiency","split","scrollToLast","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport logo from '../logo.svg';\nimport { Parallax } from 'react-scroll-parallax'\nimport Switch from '@material-ui/core/Switch';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport Zoom from '@material-ui/core/Zoom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nvar requireContext = require('require-context');\n\nclass VitaminStack extends React.Component  {\n    \n    state = {\n        selectedVitamin: null,\n        boxOpen: false\n\n    }\n\n    vitaminAmazonLink = () => {\n      let link =  'http://www.amazon.co.uk/gp/aws/cart/add.html?AssociateTag=lolao-21'\n    let counter = 1\n\n   \n    for (const vitamin of this.props.getStack()){\n       link = link + `&ASIN.${counter}=${this.getVitaminInfo(vitamin).code}&Quantity.${counter}=1`\n        \n       ++counter}\n       return link\n    }\n\n    getTrait = name => {\n        return this.props.report.find(r => r.trait === `${name}`)\n    }\n\n\n    getVitaminInfo = name => {\n        return this.props.vitamins.find(r => r.name === `${name}`)\n\n    }\n\n    avoidStack = () => {\n        const badStack  = []\n        for (const i of this.props.report)  {\n            if (this.props.getScore(i.trait) === 4 ) {\n                badStack.push(i.trait)\n            }\n        }\n        return badStack\n    }\n\n    goToBasket = () =>{ const url = this.vitaminAmazonLink();  window.open(url, \"_blank\") }\n\n    importAll = (r) => {\n        let images = {};\n        r.keys().map((item, index) => { images[item.replace('./', '')] = r(item); });\n        console.log(images);\n        return images;\n      }\n      \n      expandInfo = (vitamin) => {\n          this.setState({\n            selectedVitamin: vitamin,\n            boxOpen: true,\n          })\n      }\n      \n     closeBox = () => {\n        this.setState({\n          selectedVitamin: null,\n          boxOpen: false,\n        })\n    }\n    \n\n\n    render () {\n        this.vitaminAmazonLink()\n        const {onPage, page, getStack, getScore} = this.props\n        const {getVitaminInfo} = this\n        const {boxOpen, selectedVitamin} = this.state\n       \n        let num = 1000\n        const checked = onPage('vitaminstack')\n        const images = this.importAll(require.context('../images', true, /^\\.\\/.*\\.(jpg|png|gif)$/))\n   \n        return (\n\n            // <Parallax offsetYMax={25} offsetYMin={-35}>\n                <div className=\"result\">\n               \n                    <h2>Your Vitamin Stack</h2>\n                    <p>Based on your genotype, these are your suggested daily supplements.</p>\n\n                    <div className=\"flex-container\">\n                        {getStack().map(vitamin => \n                        \n                            \n                    \n                            <Slide  direction=\"down\" in={checked}  style={{ transformOrigin: '0 0 0' }}\n                                {...{ timeout: num+=300 } } mountOnEnter unmountOnExit>\n                                <div onClick={()=> this.expandInfo(vitamin) } className=\"flex-child\"> \n                                    <img className=\"vitstructure\" src={images[`${getVitaminInfo(vitamin).image}`]} alt={`chemical structure of ${getVitaminInfo(vitamin).name}`} />\n                               </div>\n\n                                <Card>\n                                <CardContent>\n                                <h3>{vitamin}</h3>\n                                </CardContent>\n                                </Card>\n                                <CardActions>\n                                    <Button onClick={()=> this.expandInfo(vitamin) }  size=\"small\">More info</Button>\n                                </CardActions>\n                            </Slide>\n                            ,\n                            \n                           \n                    )}\n                    </div>\n                    {boxOpen ? \n                    <Zoom in={boxOpen} >\n                        <div onClick={this.closeBox} className=\"vitamin-info\">\n                            <h3>{selectedVitamin}</h3>\n                            <p>RDA: {getVitaminInfo(selectedVitamin).rda}</p>             \n                            <p>{getVitaminInfo(selectedVitamin).benefits}</p>\n                            <ul>{getVitaminInfo(selectedVitamin).deficiency.split(',').map(deficiency =>\n                                <li>{deficiency}</li>)} \n                            </ul>\n                        </div>\n                        </Zoom>\n                    :\n                        <div></div>\n                    }\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.goToBasket}>Purchase vitamin stack</Button>\n                    <br />\n                    <br />\n                   \n                         <div id=\"section07\" className=\"demo\">\n                        <p onClick={this.props.scrollToLast} ><span></span><span></span><span></span>Click to scroll</p>\n                    </div>\n\n                </div>\n            // </Parallax>\n        )\n    }\n}\n export default VitaminStack"]},"metadata":{},"sourceType":"module"}