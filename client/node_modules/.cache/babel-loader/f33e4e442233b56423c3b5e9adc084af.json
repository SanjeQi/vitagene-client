{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/VitaminStack.js\";\nimport React from 'react';\nimport logo from \"../logo.svg\";\nimport { Parallax } from 'react-scroll-parallax';\nimport Switch from '@material-ui/core/Switch';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport Zoom from '@material-ui/core/Zoom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nvar requireContext = require('require-context');\n\nvar VitaminStack =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VitaminStack, _React$Component);\n\n  function VitaminStack() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VitaminStack);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VitaminStack)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedVitamin: null,\n      boxOpen: false\n    };\n\n    _this.vitaminAmazonLink = function () {\n      var link = 'http://www.amazon.co.uk/gp/aws/cart/add.html?AssociateTag=lolao-21';\n      var counter = 1;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.props.getStack()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var vitamin = _step.value;\n          link = link + \"&ASIN.\".concat(counter, \"=\").concat(_this.getVitaminInfo(vitamin).code, \"&Quantity.\").concat(counter, \"=1\");\n          ++counter;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return link;\n    };\n\n    _this.getTrait = function (name) {\n      return _this.props.report.find(function (r) {\n        return r.trait === \"\".concat(name);\n      });\n    };\n\n    _this.getVitaminInfo = function (name) {\n      return _this.props.vitamins.find(function (r) {\n        return r.name === \"\".concat(name);\n      });\n    };\n\n    _this.avoidStack = function () {\n      var badStack = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _this.props.report[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var i = _step2.value;\n\n          if (_this.props.getScore(i.trait) === 4) {\n            badStack.push(i.trait);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return badStack;\n    };\n\n    _this.goToBasket = function () {\n      var url = _this.vitaminAmazonLink();\n\n      window.open(url, \"_blank\");\n    };\n\n    _this.importAll = function (r) {\n      var images = {};\n      r.keys().map(function (item, index) {\n        images[item.replace('./', '')] = r(item);\n      });\n      console.log(images);\n      return images;\n    };\n\n    _this.expandInfo = function (vitamin) {\n      _this.setState({\n        selectedVitamin: vitamin,\n        boxOpen: true\n      });\n    };\n\n    _this.closeBox = function () {\n      _this.setState({\n        selectedVitamin: null,\n        boxOpen: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(VitaminStack, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.vitaminAmazonLink();\n      var _this$props = this.props,\n          onPage = _this$props.onPage,\n          page = _this$props.page,\n          getStack = _this$props.getStack,\n          getScore = _this$props.getScore;\n      var getVitaminInfo = this.getVitaminInfo;\n      var _this$state = this.state,\n          boxOpen = _this$state.boxOpen,\n          selectedVitamin = _this$state.selectedVitamin;\n      var num = 1000;\n      var checked = onPage('vitaminstack');\n      var images = this.importAll(require.context('../images', true, /^\\.\\/.*\\.(jpg|png|gif)$/));\n      return React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Your Vitamin Stack\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Based on your genotype, these are your suggested daily supplements.\"), React.createElement(\"div\", {\n        className: \"flex-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, getStack().map(function (vitamin) {\n        return React.createElement(Slide, Object.assign({\n          direction: \"down\",\n          in: checked,\n          style: {\n            transformOrigin: '0 0 0'\n          }\n        }, {\n          timeout: num += 300\n        }, {\n          mountOnEnter: true,\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(Card, {\n          className: \"flex-child\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"h5\",\n          component: \"h3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, vitamin), React.createElement(CardActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.expandInfo(vitamin);\n          },\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Learn More\"))));\n      })), boxOpen ? React.createElement(Zoom, {\n        in: boxOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"vitamin-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, selectedVitamin), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"RDA\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, getVitaminInfo(selectedVitamin).rda), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Benefits\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, getVitaminInfo(selectedVitamin).benefits), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Deficiency issues\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, getVitaminInfo(selectedVitamin).deficiency.split(',').map(function (deficiency) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, deficiency);\n      }))), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.closeBox,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Close\")))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.goToBasket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Purchase vitamin stack\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"section07\",\n        className: \"demo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        onClick: this.props.scrollToLast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), \"Click to scroll\")));\n    }\n  }]);\n\n  return VitaminStack;\n}(React.Component);\n\nexport default VitaminStack;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/VitaminStack.js"],"names":["React","Parallax","Switch","Slide","Button","Zoom","Card","CardActions","CardContent","Typography","requireContext","require","VitaminStack","state","selectedVitamin","boxOpen","vitaminAmazonLink","link","counter","props","getStack","vitamin","getVitaminInfo","code","getTrait","name","report","find","r","trait","vitamins","avoidStack","badStack","i","getScore","push","goToBasket","url","window","open","importAll","images","keys","map","item","index","replace","console","log","expandInfo","setState","closeBox","onPage","page","num","checked","context","transformOrigin","timeout","rda","benefits","deficiency","split","scrollToLast","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AACA,IAAIC,cAAc,GAAGC,OAAO,CAAC,iBAAD,CAA5B;;IAEMC,Y;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,eAAe,EAAE,IADb;AAEJC,MAAAA,OAAO,EAAE;AAFL,K;;UAMRC,iB,GAAoB,YAAM;AACxB,UAAIC,IAAI,GAAI,oEAAZ;AACE,UAAIC,OAAO,GAAG,CAAd;AAFsB;AAAA;AAAA;;AAAA;AAKtB,6BAAsB,MAAKC,KAAL,CAAWC,QAAX,EAAtB,8HAA4C;AAAA,cAAjCC,OAAiC;AACxCJ,UAAAA,IAAI,GAAGA,IAAI,mBAAYC,OAAZ,cAAuB,MAAKI,cAAL,CAAoBD,OAApB,EAA6BE,IAApD,uBAAqEL,OAArE,OAAX;AACA,YAAEA,OAAF;AACH;AARqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAStB,aAAOD,IAAP;AACH,K;;UAEDO,Q,GAAW,UAAAC,IAAI,EAAI;AACf,aAAO,MAAKN,KAAL,CAAWO,MAAX,CAAkBC,IAAlB,CAAuB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,KAAF,eAAeJ,IAAf,CAAJ;AAAA,OAAxB,CAAP;AACH,K;;UAGDH,c,GAAiB,UAAAG,IAAI,EAAI;AACrB,aAAO,MAAKN,KAAL,CAAWW,QAAX,CAAoBH,IAApB,CAAyB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACH,IAAF,eAAcA,IAAd,CAAJ;AAAA,OAA1B,CAAP;AACH,K;;UAEDM,U,GAAa,YAAM;AACf,UAAMC,QAAQ,GAAI,EAAlB;AADe;AAAA;AAAA;;AAAA;AAEf,8BAAgB,MAAKb,KAAL,CAAWO,MAA3B,mIAAoC;AAAA,cAAzBO,CAAyB;;AAChC,cAAI,MAAKd,KAAL,CAAWe,QAAX,CAAoBD,CAAC,CAACJ,KAAtB,MAAiC,CAArC,EAAyC;AACrCG,YAAAA,QAAQ,CAACG,IAAT,CAAcF,CAAC,CAACJ,KAAhB;AACH;AACJ;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOf,aAAOG,QAAP;AACH,K;;UAEDI,U,GAAa,YAAM;AAAE,UAAMC,GAAG,GAAG,MAAKrB,iBAAL,EAAZ;;AAAuCsB,MAAAA,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiB,QAAjB;AAA4B,K;;UAExFG,S,GAAY,UAACZ,CAAD,EAAO;AACf,UAAIa,MAAM,GAAG,EAAb;AACAb,MAAAA,CAAC,CAACc,IAAF,GAASC,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAAEJ,QAAAA,MAAM,CAACG,IAAI,CAACE,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAD,CAAN,GAAiClB,CAAC,CAACgB,IAAD,CAAlC;AAA2C,OAA3E;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,aAAOA,MAAP;AACH,K;;UAECQ,U,GAAa,UAAC5B,OAAD,EAAa;AACxB,YAAK6B,QAAL,CAAc;AACVpC,QAAAA,eAAe,EAAEO,OADP;AAEVN,QAAAA,OAAO,EAAE;AAFC,OAAd;AAID,K;;UAEFoC,Q,GAAW,YAAM;AACd,YAAKD,QAAL,CAAc;AACZpC,QAAAA,eAAe,EAAE,IADL;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAIH,K;;;;;;;6BAIS;AAAA;;AACN,WAAKC,iBAAL;AADM,wBAEqC,KAAKG,KAF1C;AAAA,UAECiC,MAFD,eAECA,MAFD;AAAA,UAESC,IAFT,eAESA,IAFT;AAAA,UAEejC,QAFf,eAEeA,QAFf;AAAA,UAEyBc,QAFzB,eAEyBA,QAFzB;AAAA,UAGCZ,cAHD,GAGmB,IAHnB,CAGCA,cAHD;AAAA,wBAI6B,KAAKT,KAJlC;AAAA,UAICE,OAJD,eAICA,OAJD;AAAA,UAIUD,eAJV,eAIUA,eAJV;AAMN,UAAIwC,GAAG,GAAG,IAAV;AACA,UAAMC,OAAO,GAAGH,MAAM,CAAC,cAAD,CAAtB;AACA,UAAMX,MAAM,GAAG,KAAKD,SAAL,CAAe7B,OAAO,CAAC6C,OAAR,CAAgB,WAAhB,EAA6B,IAA7B,EAAmC,yBAAnC,CAAf,CAAf;AAEA,aAEK;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAHH,EAKG;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKpC,QAAQ,GAAGuB,GAAX,CAAe,UAAAtB,OAAO;AAAA,eAEnB,oBAAC,KAAD;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,EAAE,EAAEkC,OAA7B;AAAuC,UAAA,KAAK,EAAE;AAAEE,YAAAA,eAAe,EAAE;AAAnB;AAA9C,WACQ;AAAEC,UAAAA,OAAO,EAAEJ,GAAG,IAAE;AAAhB,SADR;AACgC,UAAA,YAAY,MAD5C;AAC6C,UAAA,aAAa,MAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAKI,oBAAC,IAAD;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEA,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAECjC,OAFD,CAFA,EAOA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAK,MAAI,CAAC4B,UAAL,CAAgB5B,OAAhB,CAAL;AAAA,WAAjB;AAAkD,UAAA,IAAI,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAPA,CALJ,CAFmB;AAAA,OAAtB,CADL,CALH,EA8BQN,OAAO,GACR,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,eAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIQ,cAAc,CAACR,eAAD,CAAd,CAAgC6C,GAApC,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,EAKK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIrC,cAAc,CAACR,eAAD,CAAd,CAAgC8C,QAApC,CALL,EAMQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANR,EAOQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKtC,cAAc,CAACR,eAAD,CAAd,CAAgC+C,UAAhC,CAA2CC,KAA3C,CAAiD,GAAjD,EAAsDnB,GAAtD,CAA0D,UAAAkB,UAAU;AAAA,eACrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,UAAL,CADqE;AAAA,OAApE,CAAL,CAPR,CAFJ,EAaQ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKV,QAAtB;AAAgC,QAAA,IAAI,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAbR,CADA,CADQ,GA8BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5DX,EA8DO,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,OAAO,EAAE,KAAKf,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCA9DP,EA+DO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/DP,EAgEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhEP,EAkEQ;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAG,QAAA,OAAO,EAAE,KAAKjB,KAAL,CAAW4C,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,EAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnD,EAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhE,oBADH,CAlER,CAFL;AA2EH;;;;EArJsB/D,KAAK,CAACgE,S;;AAuJhC,eAAepD,YAAf","sourcesContent":["import React from 'react'\nimport logo from '../logo.svg';\nimport { Parallax } from 'react-scroll-parallax'\nimport Switch from '@material-ui/core/Switch';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport Zoom from '@material-ui/core/Zoom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nvar requireContext = require('require-context');\n\nclass VitaminStack extends React.Component  {\n    \n    state = {\n        selectedVitamin: null,\n        boxOpen: false\n\n    }\n\n    vitaminAmazonLink = () => {\n      let link =  'http://www.amazon.co.uk/gp/aws/cart/add.html?AssociateTag=lolao-21'\n        let counter = 1\n\n   \n        for (const vitamin of this.props.getStack()){\n            link = link + `&ASIN.${counter}=${this.getVitaminInfo(vitamin).code}&Quantity.${counter}=1`\n            ++counter\n        }\n        return link\n    }\n\n    getTrait = name => {\n        return this.props.report.find(r => r.trait === `${name}`)\n    }\n\n\n    getVitaminInfo = name => {\n        return this.props.vitamins.find(r => r.name === `${name}`)\n    }\n\n    avoidStack = () => {\n        const badStack  = []\n        for (const i of this.props.report)  {\n            if (this.props.getScore(i.trait) === 4 ) {\n                badStack.push(i.trait)\n            }\n        }\n        return badStack\n    }\n\n    goToBasket = () => { const url = this.vitaminAmazonLink();  window.open(url, \"_blank\") }\n\n    importAll = (r) => {\n        let images = {};\n        r.keys().map((item, index) => { images[item.replace('./', '')] = r(item); });\n        console.log(images);\n        return images;\n    }\n      \n      expandInfo = (vitamin) => {\n        this.setState({\n            selectedVitamin: vitamin,\n            boxOpen: true,\n        })\n      }\n      \n     closeBox = () => {\n        this.setState({\n          selectedVitamin: null,\n          boxOpen: false,\n        })\n    }\n    \n\n\n    render () {\n        this.vitaminAmazonLink()\n        const {onPage, page, getStack, getScore} = this.props\n        const {getVitaminInfo} = this\n        const {boxOpen, selectedVitamin} = this.state\n       \n        let num = 1000\n        const checked = onPage('vitaminstack')\n        const images = this.importAll(require.context('../images', true, /^\\.\\/.*\\.(jpg|png|gif)$/))\n   \n        return (\n\n             <div className=\"result\">\n               \n                <h2>Your Vitamin Stack</h2>\n                <p>Based on your genotype, these are your suggested daily supplements.</p>\n\n                <div className=\"flex-container\">\n                    {getStack().map(vitamin => \n                        \n                        <Slide  direction=\"down\" in={checked}  style={{ transformOrigin: '0 0 0' }}\n                            {...{ timeout: num+=300 } } mountOnEnter unmountOnExit>\n                            {/* <div onClick={()=> this.expandInfo(vitamin) } className=\"flex-child\"> \n                                <img className=\"vitstructure\" src={images[`${getVitaminInfo(vitamin).image}`]} alt={`chemical structure of ${getVitaminInfo(vitamin).name}`} />\n                            </div> */}\n                            <Card  className=\"flex-child\">\n                            \n                            <Typography variant=\"h5\" component=\"h3\">\n                          \n                            {vitamin}\n                           \n                            </Typography>\n                            <CardActions>\n                                <Button onClick={()=> this.expandInfo(vitamin) }  size=\"small\">Learn More</Button>\n                            </CardActions>\n                            </Card>\n                               \n                              \n                        </Slide>\n                            ,        \n                    )}\n                    </div>\n                    {boxOpen ? \n                    <Zoom in={boxOpen} >\n                    <Card className=\"vitamin-info\">\n                            \n                        <Typography>\n                            <h4>{selectedVitamin}</h4>\n                            <h5>RDA</h5>\n                            <p>{getVitaminInfo(selectedVitamin).rda}</p>   \n                            <h5>Benefits</h5>          \n                             <p>{getVitaminInfo(selectedVitamin).benefits}</p>\n                                <h5>Deficiency issues</h5>\n                                <ul>{getVitaminInfo(selectedVitamin).deficiency.split(',').map(deficiency =>\n                                    <li>{deficiency}</li>)} \n                                </ul>\n                            </Typography>\n                            <CardActions>\n                                <Button onClick={this.closeBox} size=\"small\">Close</Button>\n                            </CardActions>\n                            </Card>\n                            \n                        {/* <div onClick={this.closeBox} className=\"vitamin-info\">\n                            <h3>{selectedVitamin}</h3>\n                            <p>RDA: {getVitaminInfo(selectedVitamin).rda}</p>             \n                            <p>{getVitaminInfo(selectedVitamin).benefits}</p>\n                            <ul>{getVitaminInfo(selectedVitamin).deficiency.split(',').map(deficiency =>\n                                <li>{deficiency}</li>)} \n                            </ul>\n                        </div> */}\n                        </Zoom>\n                    :\n                        <div></div>\n                    }\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.goToBasket}>Purchase vitamin stack</Button>\n                    <br />\n                    <br />\n                   \n                     <div id=\"section07\" className=\"demo\">\n                        <p onClick={this.props.scrollToLast} ><span></span><span></span><span></span>Click to scroll</p>\n                    </div>\n\n                </div>\n           \n        )\n    }\n}\n export default VitaminStack"]},"metadata":{},"sourceType":"module"}