{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/YourGenome.js\";\nimport React, { Component } from 'react';\nimport BarGroup from './BarGroup';\nimport logo from \"../logo.svg\";\nimport { Parallax } from 'react-scroll-parallax';\nimport CanvasJSReact from '../canvasjs.react';\nimport Button from '@material-ui/core/Button';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nvar YourGenome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YourGenome, _Component);\n\n  function YourGenome() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, YourGenome);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(YourGenome)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getResultInfo = function (vitamin) {\n      switch (vitamin.score) {\n        case 0:\n          return 'Lower blood serum level';\n          break;\n\n        case 1:\n          return 'Slightly lower serum level';\n          break;\n\n        case 2:\n          return 'Intermediate';\n          break;\n\n        case 3:\n          return 'Slightly higher serum level';\n          break;\n\n        case 4:\n          return 'Higher blood serum level';\n          break;\n      }\n    };\n\n    _this.populateChart = function () {\n      var array = [];\n\n      _this.props.report.map(function (vitamin) {\n        return array.push({\n          y: vitamin.score,\n          label: vitamin.trait\n        });\n      });\n\n      return array;\n    };\n\n    return _this;\n  }\n\n  _createClass(YourGenome, [{\n    key: \"addSymbols\",\n    value: function addSymbols(e) {\n      var suffixes = [\"\", \"K\", \"M\", \"B\"];\n      var order = Math.max(Math.floor(Math.log(e.value) / Math.log(1000)), 0);\n      if (order > suffixes.length - 1) order = suffixes.length - 1;\n      var suffix = suffixes[order];\n      return CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var report = this.props.report;\n      var options = {\n        animationEnabled: true,\n        animationDuration: 2000,\n        backgroundColor: \"rgba(255,0,0,0)\",\n        colorSet: \"colorSet2\",\n        theme: \"light2\",\n        title: {\n          fontColor: \"black\",\n          fontFamily: \"raleway\"\n        },\n        axisX: {\n          reversed: true,\n          fontFamily: \"raleway\",\n          labelFontFamily: \"raleway\",\n          labelFontColor: \"white\"\n        },\n        axisY: {\n          title: \"Typical blood serum concentration for your genotype (0-4)\",\n          labelFormatter: this.addSymbols,\n          labelFontFamily: \"raleway\",\n          labelFontColor: \"white\",\n          titleFontFamily: \"raleway\",\n          titleFontColor: \"white\",\n          titleFontSize: 14\n        },\n        data: [{\n          type: \"bar\",\n          dataPoints: _toConsumableArray(this.populateChart())\n        }]\n      };\n      var style = {\n        borderRadius: 3,\n        border: '1px solid white',\n        color: 'white',\n        height: 48,\n        padding: '0 30px' // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n\n      };\n      return React.createElement(\"div\", {\n        className: \"result-pheno\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Your phenotype Results\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"These are the results of your natural blood serum concentration of each tested micronutrient based on your genotype. Each nutrient is assigned a score that corresponds to the following: \"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"0 Lower blood serum level\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"1 Slightly lower serum level\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"2 Intermediate\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"3 Slightly higher serum level\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"4 'Higher blood serum level\")), React.createElement(\"div\", {\n        className: \"info-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(CanvasJSChart, {\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        style: style,\n        onClick: function onClick() {\n          return _this2.props.scrollTo(1500);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Your Supplement Stack\")));\n    }\n  }]);\n\n  return YourGenome;\n}(Component);\n\nexport default YourGenome;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/YourGenome.js"],"names":["React","Component","BarGroup","Parallax","CanvasJSReact","Button","classNames","PropTypes","CanvasJS","CanvasJSChart","YourGenome","getResultInfo","vitamin","score","populateChart","array","props","report","map","push","y","label","trait","e","suffixes","order","Math","max","floor","log","value","length","suffix","formatNumber","pow","options","animationEnabled","animationDuration","backgroundColor","colorSet","theme","title","fontColor","fontFamily","axisX","reversed","labelFontFamily","labelFontColor","axisY","labelFormatter","addSymbols","titleFontFamily","titleFontColor","titleFontSize","data","type","dataPoints","style","borderRadius","border","color","height","padding","scrollTo"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,IAAIC,QAAQ,GAAGJ,aAAa,CAACI,QAA7B;AACA,IAAIC,aAAa,GAAGL,aAAa,CAACK,aAAlC;;IAGMC,U;;;;;;;;;;;;;;;;;;UAENC,a,GAAgB,UAAAC,OAAO,EAAI;AACvB,cAAQA,OAAO,CAACC,KAAhB;AACI,aAAK,CAAL;AACC,iBAAO,yBAAP;AACD;;AACA,aAAK,CAAL;AACA,iBAAQ,4BAAR;AACA;;AACA,aAAK,CAAL;AACA,iBAAO,cAAP;AACA;;AACA,aAAK,CAAL;AACC,iBAAO,6BAAP;AACD;;AACA,aAAK,CAAL;AACC,iBAAO,0BAAP;AACD;AAfJ;AAkBH,K;;UAGDC,a,GAAgB,YAAM;AACtB,UAAIC,KAAK,GAAG,EAAZ;;AACA,YAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,UAAAN,OAAO;AAAA,eAC7BG,KAAK,CAACI,IAAN,CAAW;AAACC,UAAAA,CAAC,EAAER,OAAO,CAACC,KAAZ;AAAmBQ,UAAAA,KAAK,EAAET,OAAO,CAACU;AAAlC,SAAX,CAD6B;AAAA,OAA7B;;AAIA,aAAOP,KAAP;AACC,K;;;;;;;+BAGUQ,C,EAAE;AACT,UAAIC,QAAQ,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,CAAf;AACA,UAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,GAAL,CAASN,CAAC,CAACO,KAAX,IAAoBJ,IAAI,CAACG,GAAL,CAAS,IAAT,CAA/B,CAAT,EAAyD,CAAzD,CAAZ;AACA,UAAGJ,KAAK,GAAGD,QAAQ,CAACO,MAAT,GAAkB,CAA7B,EACIN,KAAK,GAAGD,QAAQ,CAACO,MAAT,GAAkB,CAA1B;AACJ,UAAIC,MAAM,GAAGR,QAAQ,CAACC,KAAD,CAArB;AACA,aAAOjB,QAAQ,CAACyB,YAAT,CAAsBV,CAAC,CAACO,KAAF,GAAUJ,IAAI,CAACQ,GAAL,CAAS,IAAT,EAAeT,KAAf,CAAhC,IAAyDO,MAAhE;AACH;;;6BAIS;AAAA;;AAAA,UACCf,MADD,GACW,KAAKD,KADhB,CACCC,MADD;AAIV,UAAMkB,OAAO,GAAG;AACZC,QAAAA,gBAAgB,EAAE,IADN;AAEZC,QAAAA,iBAAiB,EAAE,IAFP;AAGZC,QAAAA,eAAe,EAAE,iBAHL;AAIZC,QAAAA,QAAQ,EAAG,WAJC;AAKZC,QAAAA,KAAK,EAAE,QALK;AAMZC,QAAAA,KAAK,EAAC;AACFC,UAAAA,SAAS,EAAE,OADT;AAEFC,UAAAA,UAAU,EAAE;AAFV,SANM;AAUZC,QAAAA,KAAK,EAAE;AAEHC,UAAAA,QAAQ,EAAE,IAFP;AAGHF,UAAAA,UAAU,EAAE,SAHT;AAIHG,UAAAA,eAAe,EAAE,SAJd;AAKHC,UAAAA,cAAc,EAAE;AALb,SAVK;AAmBZC,QAAAA,KAAK,EAAE;AACHP,UAAAA,KAAK,EAAE,2DADJ;AAEHQ,UAAAA,cAAc,EAAE,KAAKC,UAFlB;AAGHJ,UAAAA,eAAe,EAAE,SAHd;AAIHC,UAAAA,cAAc,EAAE,OAJb;AAKHI,UAAAA,eAAe,EAAE,SALd;AAMHC,UAAAA,cAAc,EAAE,OANb;AAOHC,UAAAA,aAAa,EAAE;AAPZ,SAnBK;AA4BZC,QAAAA,IAAI,EAAE,CAAC;AACHC,UAAAA,IAAI,EAAE,KADH;AAEHC,UAAAA,UAAU,qBAAM,KAAK1C,aAAL,EAAN;AAFP,SAAD;AA5BM,OAAhB;AAoCA,UAAM2C,KAAK,GAAG;AAGNC,QAAAA,YAAY,EAAE,CAHR;AAINC,QAAAA,MAAM,EAAE,iBAJF;AAKNC,QAAAA,KAAK,EAAE,OALD;AAMNC,QAAAA,MAAM,EAAE,EANF;AAONC,QAAAA,OAAO,EAAE,QAPH,CAQN;;AARM,OAAd;AAaA,aAEA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sMAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAJD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCALD,CAHJ,EAUK;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAG3B,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,EAEK,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAA2B,QAAA,KAAK,EAAC,SAAjC;AAA2C,QAAA,KAAK,EAAEsB,KAAlD;AAAyD,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACzC,KAAL,CAAW+C,QAAX,CAAoB,IAApB,CAAN;AAAA,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFL,CAVL,CAFA;AAsBE;;;;EAxHuB9D,S;;AA4HxB,eAAeS,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport BarGroup from './BarGroup';\nimport logo from '../logo.svg';\nimport { Parallax } from 'react-scroll-parallax';\nimport CanvasJSReact from '../canvasjs.react'\nimport Button from '@material-ui/core/Button'\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\n\nclass YourGenome extends Component {\n\ngetResultInfo = vitamin => {\n    switch (vitamin.score) {\n        case 0:\n         return 'Lower blood serum level'\n        break;\n        case 1:\n        return  'Slightly lower serum level'\n        break;\n        case 2:\n        return 'Intermediate'\n        break;\n        case 3:\n         return 'Slightly higher serum level'\n        break;\n        case 4:\n         return 'Higher blood serum level'\n        break;\n    }\n\n}\n\n\npopulateChart = () => {\nlet array = []\nthis.props.report.map(vitamin =>\narray.push({y: vitamin.score, label: vitamin.trait})\n)\n\nreturn array\n}\n \n\naddSymbols(e){\n    var suffixes = [\"\", \"K\", \"M\", \"B\"];\n    var order = Math.max(Math.floor(Math.log(e.value) / Math.log(1000)), 0);\n    if(order > suffixes.length - 1)\n        order = suffixes.length - 1;\n    var suffix = suffixes[order];\n    return CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;\n}\n \n\n\nrender () {\n    const {report} = this.props\n\n\nconst options = {\n    animationEnabled: true,\n    animationDuration: 2000,\n    backgroundColor: \"rgba(255,0,0,0)\",\n    colorSet:  \"colorSet2\",\n    theme: \"light2\",\n    title:{\n        fontColor: \"black\",\n        fontFamily: \"raleway\",\n    },\n    axisX: {\n        \n        reversed: true,\n        fontFamily: \"raleway\",\n        labelFontFamily: \"raleway\",\n        labelFontColor: \"white\",\n      \n        \n    },\n    axisY: {\n        title: \"Typical blood serum concentration for your genotype (0-4)\",\n        labelFormatter: this.addSymbols,\n        labelFontFamily: \"raleway\",\n        labelFontColor: \"white\",\n        titleFontFamily: \"raleway\",\n        titleFontColor: \"white\",\n        titleFontSize: 14\n    },\n    data: [{\n        type: \"bar\",\n        dataPoints: [...this.populateChart()]\n    }]\n}\n\n\n\nconst style = {\n    \n\n        borderRadius: 3,\n        border: '1px solid white',\n        color: 'white',\n        height: 48,\n        padding: '0 30px',\n        // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      \n    \n  };\n\nreturn (\n\n<div className=\"result-pheno\">\n    <h2>Your phenotype Results</h2> \n    <p>These are the results of your natural blood serum concentration of each tested micronutrient based on your genotype. Each nutrient is assigned a score that corresponds to the following: </p>\n    <ul>\n     <li>0 Lower blood serum level</li> \n     <li>1 Slightly lower serum level</li> \n     <li>2 Intermediate</li> \n     <li>3 Slightly higher serum level</li> \n     <li>4 'Higher blood serum level</li> \n   </ul>\n     <div  className=\"info-container\"> \n          <CanvasJSChart options ={options}/>\n          <Button variant=\"outlined\" color=\"primary\" style={style} onClick={() => this.props.scrollTo(1500)}>\n        Your Supplement Stack\n      </Button>\n      \n     </div>\n</div>\n\n\n)}\n}\n\n\n export default YourGenome\n"]},"metadata":{},"sourceType":"module"}