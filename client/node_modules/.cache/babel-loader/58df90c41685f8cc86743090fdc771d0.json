{"ast":null,"code":"import _regeneratorRuntime from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport logo from './LogoMakr_7sWE81.png';\nimport './App.css';\nimport Header from './components/Header';\nimport VitaminStack from './components/VitaminStack';\nimport Intro from './components/Intro';\nimport YourGenome from './components/YourGenome';\nimport Diet from './components/Diet';\nimport { Parallax } from 'react-scroll-parallax';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Link, Switch, withRouter } from 'react-router-dom'; // import  scrollToComponent from 'react-scroll-to-component'\n\nimport * as Scroll from 'react-scroll';\nimport { Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      report: null,\n      vitamins: null,\n      checked: false,\n      page: 'splash' //Initial Render\n\n    };\n\n    _this.scrollToTop = function () {\n      scroll.scrollToTop();\n\n      _this.setPage('end');\n    };\n\n    _this.scrollToBottom = function () {\n      scroll.scrollToBottom();\n\n      _this.setPage('genome');\n    };\n\n    _this.scrollTo = function (x) {\n      scroll.scrollTo(x);\n\n      _this.setPage('vitaminstack');\n    };\n\n    _this.scrollMore = function () {\n      scroll.scrollMore(100);\n    };\n\n    _this.handleSetActive = function (to) {\n      console.log(to);\n    };\n\n    _this.scrollToLast = function () {\n      scroll.scrollToBottom();\n\n      _this.setPage('food');\n    };\n\n    _this.setPage = function (pg) {\n      _this.setState({\n        page: pg\n      }, console.log(\"hey!\"));\n    };\n\n    _this.onPage = function (pg) {\n      return _this.state.page === pg ? true : false;\n    };\n\n    _this.toggleStackView = function () {\n      _this.setState({\n        checked: !_this.state.checked\n      });\n    };\n\n    _this.exit = function () {\n      _this.setState({\n        report: null,\n        page: 'splash'\n      });\n    };\n\n    _this.getStack = function () {\n      var stack = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.state.report[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var i = _step.value;\n\n          if (_this.getScore(i.trait) < 2) {\n            switch (i.trait) {\n              case \"Folate\":\n                stack.push(\"Folic Acid\");\n\n              default:\n                stack.push(i.trait);\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return stack;\n    };\n\n    _this.getScore = function (name) {\n      return _this.state.report.find(function (r) {\n        return r.trait === \"\".concat(name);\n      }).score;\n    };\n\n    _this.getVitamins = function () {\n      fetch(\"http://localhost:3000/api/v1/vitamins\").then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return _this.setState({\n          vitamins: _toConsumableArray(res)\n        }, localStorage.setItem('vitamins', res));\n      });\n    };\n\n    _this.getReport = function () {\n      if (!navigator.onLine) {\n        _this.setState({\n          report: localStorage.getItem('report')\n        });\n      }\n\n      _this.callApi().then(function (res) {\n        return _this.setState({\n          report: res.report\n        });\n      }).then(_this.toggleStackView()).then(_this.setPage('genome'));\n    };\n\n    _this.callApi =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/report');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!navigator.onLine) {\n        this.setState({\n          vitamins: localStorage.getItem('vitamins')\n        });\n      }\n\n      this.getVitamins();\n      Events.scrollEvent.register('begin', function (to, element) {\n        console.log(\"begin\", arguments);\n      });\n      Events.scrollEvent.register('end', function (to, element) {\n        console.log(\"end\", arguments);\n      });\n      scrollSpy.update();\n    } // SCROLL FUNCTIONS\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Events.scrollEvent.remove('begin');\n      Events.scrollEvent.remove('end');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          vitamins = _this$state.vitamins,\n          report = _this$state.report,\n          connected = _this$state.connected,\n          checked = _this$state.checked,\n          page = _this$state.page;\n      var onPage = this.onPage,\n          getStack = this.getStack,\n          getScore = this.getScore,\n          getReport = this.getReport,\n          scrollTo = this.scrollTo,\n          scrollToTop = this.scrollToTop,\n          setPage = this.setPage,\n          exit = this.exit,\n          scrollToBottom = this.scrollToBottom,\n          scrollToLast = this.scrollToLast;\n\n      var Container = function Container() {\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(Header, {\n          page: page,\n          checked: checked,\n          exit: exit,\n          getReport: getReport,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }), React.createElement(YourGenome, {\n          onPage: onPage,\n          page: page,\n          setPage: setPage,\n          scrollTo: scrollTo,\n          getScore: getScore,\n          getStack: getStack,\n          report: report,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }), React.createElement(VitaminStack, {\n          onPage: onPage,\n          page: page,\n          setPage: setPage,\n          scrollTo: scrollTo,\n          scrollToLast: scrollToLast,\n          getScore: getScore,\n          getStack: getStack,\n          checked: checked,\n          vitamins: vitamins,\n          report: report,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }), React.createElement(Diet, {\n          onPage: onPage,\n          scrollToTop: scrollToTop,\n          setPage: setPage,\n          getStack: getStack,\n          exit: exit,\n          page: page,\n          checked: checked,\n          getScore: getScore,\n          vitamins: vitamins,\n          report: report,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }));\n      };\n\n      return (//    <div className=\"page\">\n        //     <Fragment>\n        //       <div>\n        //         <Header page={page} checked={checked} exit={exit} getReport={getReport}/>\n        //         {report ?\n        //           <Fragment>  \n        //             <YourGenome onPage={onPage} page={page}  scrollTo={scrollTo}  getScore={getScore} getStack={getStack} report={report} />\n        //               <VitaminStack  onPage={onPage} page={page}  scrollTo={scrollTo} scrollToLast={scrollToLast} getScore={getScore} getStack={getStack} checked={checked} vitamins={vitamins} report={report} />\n        //            <Diet onPage={onPage} scrollToTop={scrollToTop} getStack={getStack} exit={exit} page={page} checked={checked} getScore={getScore} vitamins={vitamins} report={report} />\n        //           </Fragment>\n        //         :\n        //           <Fragment></Fragment>\n        //         }\n        //       </div>\n        //     </Fragment>\n        //  </div>\n        //  )\n        React.createElement(Router, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"page\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, !report ? React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          render: function render(routerProps) {\n            return React.createElement(Header, Object.assign({}, routerProps, {\n              page: page,\n              checked: checked,\n              exit: exit,\n              getReport: getReport,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 200\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }) : React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"/genome\",\n          render: function render(routerProps) {\n            return React.createElement(Container, Object.assign({}, routerProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 204\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        })))))\n      );\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/src/App.js"],"names":["React","Component","Fragment","logo","Header","VitaminStack","Intro","YourGenome","Diet","Parallax","BrowserRouter","Router","Route","Link","Switch","withRouter","Scroll","Element","Events","animateScroll","scroll","scrollSpy","scroller","App","state","report","vitamins","checked","page","scrollToTop","setPage","scrollToBottom","scrollTo","x","scrollMore","handleSetActive","to","console","log","scrollToLast","pg","setState","onPage","toggleStackView","exit","getStack","stack","i","getScore","trait","push","name","find","r","score","getVitamins","fetch","then","res","json","localStorage","setItem","getReport","navigator","onLine","getItem","callApi","response","body","status","Error","message","scrollEvent","register","element","arguments","update","remove","connected","Container","routerProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport logo from './LogoMakr_7sWE81.png';\nimport './App.css';\nimport Header from './components/Header'\nimport VitaminStack from './components/VitaminStack'\nimport Intro from './components/Intro'\nimport YourGenome from './components/YourGenome'\nimport Diet from './components/Diet'\nimport { Parallax } from 'react-scroll-parallax'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport {  Link, Switch, withRouter } from 'react-router-dom'\n// import  scrollToComponent from 'react-scroll-to-component'\nimport * as Scroll from 'react-scroll';\nimport {  Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n \n\nclass App extends Component {\n\n  state = {\n\n    report: null,\n    vitamins: null,\n    checked: false,\n    page: 'splash'\n  }\n\n  \n //Initial Render\n  componentDidMount() {\n    if (!navigator.onLine) {\n      this.setState({ vitamins: localStorage.getItem('vitamins') })\n    }\n    this.getVitamins()\n\n    \n \n\n    Events.scrollEvent.register('begin', function(to, element) {\n      console.log(\"begin\", arguments);\n    });\n\n    Events.scrollEvent.register('end', function(to, element) {\n      console.log(\"end\", arguments);\n    });\n\n    scrollSpy.update();\n\n   }\n\n   // SCROLL FUNCTIONS\n\n   \n\n   componentWillUnmount() {\n      Events.scrollEvent.remove('begin');\n      Events.scrollEvent.remove('end');\n  }\n\n  scrollToTop =  () => {\n    scroll.scrollToTop();\n    this.setPage('end')\n  }\n  scrollToBottom =  () => {\n    scroll.scrollToBottom()\n    this.setPage('genome');\n    \n  }\n  scrollTo =  (x) => {\n    scroll.scrollTo(x);\n    this.setPage('vitaminstack')\n  }\n  scrollMore =  () => {\n    scroll.scrollMore(100);\n    \n  }\n  handleSetActive = (to) => {\n    console.log(to);\n  }\n\n  scrollToLast =  () => {\n    scroll.scrollToBottom();\n    this.setPage('food')\n    \n  }\n\n  // PAGE TRANSITION FUNCTIONS\n  setPage = (pg) => {\n    this.setState({page:pg}, console.log(\"hey!\")  )\n    \n    \n  }\n\n  onPage = (pg) => {\n    return this.state.page === pg ? true : false\n  }\n \n  toggleStackView = () => {\n    this.setState({ checked: !this.state.checked });\n  }\n\n  exit = () => {\n    this.setState({ report: null,\n    page: 'splash' });\n  }\n\n  \n\n  //DATA RENDER FUNCTIONS\n   getStack = () => {\n      const stack = []\n      for (const i of this.state.report)  {\n          if (this.getScore(i.trait) < 2 )\n            { \n            switch (i.trait) {\n                case \"Folate\":\n                stack.push(\"Folic Acid\");\n                default:stack.push(i.trait) }\n            }\n      }\n      return stack\n    }\n\n  getScore = name => {\n    return this.state.report.find(r => r.trait === `${name}`).score\n  }\n\n\n  getVitamins = () => {\n    fetch(\"http://localhost:3000/api/v1/vitamins\")\n    .then(res =>res.json())\n    .then(res => this.setState({vitamins: [...res] }, localStorage.setItem('vitamins', res)))\n    \n  }\n \n\n\n\n  getReport = () => {\n\n    if (!navigator.onLine) {\n      this.setState({ report: localStorage.getItem('report') })\n    }\n    this.callApi()\n    .then(res => this.setState({ report: res.report}))\n    .then(this.toggleStackView())\n    .then(this.setPage('genome'))\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/report');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n\n\n \n   render() {\n    \n    const {vitamins,report, connected, checked, page} = this.state\n    const {onPage, getStack, getScore, getReport, scrollTo, scrollToTop, setPage, exit, scrollToBottom, scrollToLast} = this\n    const Container = () => {\n      return ( \n      <Fragment>\n          <Header page={page} checked={checked} exit={exit} getReport={getReport}/>\n          <YourGenome  onPage={onPage} page={page}  setPage={setPage} scrollTo={scrollTo}  getScore={getScore} getStack={getStack} report={report}/>\n          <VitaminStack onPage={onPage} page={page} setPage={setPage} scrollTo={scrollTo} scrollToLast={scrollToLast} getScore={getScore} getStack={getStack} checked={checked} vitamins={vitamins} report={report}/>\n          <Diet onPage={onPage} scrollToTop={scrollToTop} setPage={setPage} getStack={getStack} exit={exit} page={page} checked={checked} getScore={getScore} vitamins={vitamins} report={report}/>\n      </Fragment>)\n  \n    }\n\n    return (\n    //    <div className=\"page\">\n    //     <Fragment>\n    //       <div>\n    //         <Header page={page} checked={checked} exit={exit} getReport={getReport}/>\n    //         {report ?\n    //           <Fragment>  \n    //             <YourGenome onPage={onPage} page={page}  scrollTo={scrollTo}  getScore={getScore} getStack={getStack} report={report} />\n              \n    //               <VitaminStack  onPage={onPage} page={page}  scrollTo={scrollTo} scrollToLast={scrollToLast} getScore={getScore} getStack={getStack} checked={checked} vitamins={vitamins} report={report} />\n                \n    //            <Diet onPage={onPage} scrollToTop={scrollToTop} getStack={getStack} exit={exit} page={page} checked={checked} getScore={getScore} vitamins={vitamins} report={report} />\n    //           </Fragment>\n    //         :\n    //           <Fragment></Fragment>\n    //         }\n    //       </div>\n    //     </Fragment>\n    //  </div>\n    //  )\n\n      <Router>\n        <div className=\"page\">\n   {/* // component={Header} page={page} checked={checked} exit={exit} getReport={getReport}  onEnter={() => document.getElementById(\"header-logo\").scrollIntoView()}  />\n           */}\n            <Switch>\n         {!report ?\n        <Route exact path='/' render={routerProps => <Header {...routerProps} page={page} checked={checked} exit={exit} getReport={getReport} />} />\n        \n        :\n       <Fragment>\n        <Route path='/genome'render={routerProps => <Container {...routerProps} />}  />\n          {/* <Route path='/vitamins' render={routerProps => <Container {...routerProps} />}  />\n          <Route path='/food' render={routerProps => <Container {...routerProps} />}   /> */}\n          \n          \n          \n          </Fragment> \n        }\n        </Switch>\n          \n           </div>\n      </Router>\n  )\n\n\n   \n   }\n }\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}