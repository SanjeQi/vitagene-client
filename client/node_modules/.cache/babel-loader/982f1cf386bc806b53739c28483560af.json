{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/YourGenome.js\";\nimport React, { Component } from 'react';\nimport BarGroup from './BarGroup';\nimport logo from \"../logo.svg\";\nimport { Parallax } from 'react-scroll-parallax';\nimport CanvasJSReact from '../canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nvar YourGenome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YourGenome, _Component);\n\n  function YourGenome() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, YourGenome);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(YourGenome)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getResultInfo = function (vitamin) {\n      switch (vitamin.score) {\n        case 0:\n          return 'Lower blood serum level';\n          break;\n\n        case 1:\n          return 'Slightly lower serum level';\n          break;\n\n        case 2:\n          return 'Intermediate';\n          break;\n\n        case 3:\n          return 'Slightly higher serum level';\n          break;\n\n        case 4:\n          return 'Higher blood serum level';\n          break;\n      }\n    };\n\n    _this.populateChart = function () {\n      var array = [];\n\n      _this.props.report.map(function (vitamin) {\n        return array.push({\n          y: vitamin.score,\n          label: vitamin.trait\n        });\n      });\n\n      return array;\n    };\n\n    return _this;\n  }\n\n  _createClass(YourGenome, [{\n    key: \"addSymbols\",\n    value: function addSymbols(e) {\n      var suffixes = [\"\", \"K\", \"M\", \"B\"];\n      var order = Math.max(Math.floor(Math.log(e.value) / Math.log(1000)), 0);\n      if (order > suffixes.length - 1) order = suffixes.length - 1;\n      var suffix = suffixes[order];\n      return CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var report = this.props.report;\n      var options = {\n        animationEnabled: true,\n        backgroundColor: \"rgba(255,0,0,0)\",\n        colorSet: \"colorSet2\",\n        theme: \"light2\",\n        title: {\n          fontFamily: \"raleway\"\n        },\n        axisX: {\n          reversed: true,\n          fontFamily: \"raleway\"\n        },\n        axisY: {\n          title: \"Blood Serum Concentration\",\n          labelFormatter: this.addSymbols,\n          fontFamily: \"raleway\"\n        },\n        data: [{\n          type: \"bar\",\n          dataPoints: _toConsumableArray(this.populateChart())\n        }]\n      };\n      return React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Your phenotype Results\"), React.createElement(\"div\", {\n        className: \"info-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(CanvasJSChart, {\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), \")}\");\n    }\n  }]);\n\n  return YourGenome;\n}(Component);\n\nexport default YourGenome;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/YourGenome.js"],"names":["React","Component","BarGroup","Parallax","CanvasJSReact","CanvasJS","CanvasJSChart","YourGenome","getResultInfo","vitamin","score","populateChart","array","props","report","map","push","y","label","trait","e","suffixes","order","Math","max","floor","log","value","length","suffix","formatNumber","pow","options","animationEnabled","backgroundColor","colorSet","theme","title","fontFamily","axisX","reversed","axisY","labelFormatter","addSymbols","data","type","dataPoints"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport BarGroup from './BarGroup';\nimport logo from '../logo.svg';\nimport { Parallax } from 'react-scroll-parallax';\nimport CanvasJSReact from '../canvasjs.react'\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass YourGenome extends Component {\n\ngetResultInfo = vitamin => {\n    switch (vitamin.score) {\n        case 0:\n         return 'Lower blood serum level'\n        break;\n        case 1:\n        return  'Slightly lower serum level'\n        break;\n        case 2:\n        return 'Intermediate'\n        break;\n        case 3:\n         return 'Slightly higher serum level'\n        break;\n        case 4:\n         return 'Higher blood serum level'\n        break;\n    }\n\n}\n\n\npopulateChart = () => {\nlet array = []\nthis.props.report.map(vitamin =>\narray.push({y: vitamin.score, label: vitamin.trait})\n)\n\nreturn array\n}\n \n\naddSymbols(e){\n    var suffixes = [\"\", \"K\", \"M\", \"B\"];\n    var order = Math.max(Math.floor(Math.log(e.value) / Math.log(1000)), 0);\n    if(order > suffixes.length - 1)\n        order = suffixes.length - 1;\n    var suffix = suffixes[order];\n    return CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;\n}\n \n\n\nrender () {\n    const {report} = this.props\n\n\nconst options = {\n    animationEnabled: true,\n    backgroundColor: \"rgba(255,0,0,0)\",\n    colorSet:  \"colorSet2\",\n    theme: \"light2\",\n    title:{\n   \n        fontFamily: \"raleway\",\n    },\n    axisX: {\n        \n        reversed: true,\n        fontFamily: \"raleway\"\n        \n    },\n    axisY: {\n        title: \"Blood Serum Concentration\",\n        labelFormatter: this.addSymbols,\n        fontFamily: \"raleway\"\n    },\n    data: [{\n        type: \"bar\",\n        dataPoints: [...this.populateChart()]\n    }]\n}\n\nreturn (\n\n<div className=\"result\">\n    <h2>Your phenotype Results</h2>\n     \n     <div  className=\"info-container\"> \n\n          <CanvasJSChart options ={options}/>\n     </div>\n    )}\n\n\n\n\n\n    \n</div>\n\n\n)}\n}\n export default YourGenome\n"]},"metadata":{},"sourceType":"module"}