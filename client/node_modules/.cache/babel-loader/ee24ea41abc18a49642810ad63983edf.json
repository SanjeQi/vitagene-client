{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/VitaminStack.js\";\nimport React from 'react';\nimport logo from \"../logo.svg\";\nimport { Parallax } from 'react-scroll-parallax';\nimport Switch from '@material-ui/core/Switch';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\n\nvar VitaminStack =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VitaminStack, _React$Component);\n\n  function VitaminStack() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VitaminStack);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VitaminStack)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.vitaminAmazonLink = function () {\n      var link = 'http://www.amazon.co.uk/gp/aws/cart/add.html?AssociateTag=lolao-21';\n      var counter = 1;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.props.getStack()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var vitamin = _step.value;\n          link = link + \"&ASIN.\".concat(counter, \"=\").concat(_this.getVitaminInfo(vitamin).code, \"&Quantity.\").concat(counter, \"=1\");\n          ++counter;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return link;\n    };\n\n    _this.getTrait = function (name) {\n      return _this.props.report.find(function (r) {\n        return r.trait === \"\".concat(name);\n      });\n    };\n\n    _this.getVitaminInfo = function (name) {\n      return _this.props.vitamins.find(function (r) {\n        return r.name === \"\".concat(name);\n      });\n    };\n\n    _this.avoidStack = function () {\n      var badStack = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _this.props.report[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var i = _step2.value;\n\n          if (_this.props.getScore(i.trait) === 4) {\n            badStack.push(i.trait);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return badStack;\n    };\n\n    _this.goToBasket = function () {\n      var url = _this.vitaminAmazonLink();\n\n      window.open(url, \"_blank\");\n    };\n\n    return _this;\n  }\n\n  _createClass(VitaminStack, [{\n    key: \"render\",\n    // getStack = () => {\n    //     const stack = []\n    //     for (const i of this.props.report)  {\n    //         if (this.getScore(i.trait) < 2 )\n    //     { \n    //         switch (i.trait) {\n    //             case \"Folate\":\n    //             stack.push(\"Folic Acid\");\n    //             default:stack.push(i.trait) }\n    //         }\n    //     }\n    //     return stack\n    //     console.log(stack)\n    // }\n    value: function render() {\n      this.vitaminAmazonLink();\n      var _this$props = this.props,\n          checked = _this$props.checked,\n          getStack = _this$props.getStack,\n          getScore = _this$props.getScore;\n      var getVitaminInfo = this.getVitaminInfo;\n      var num = 1000;\n      return React.createElement(Parallax, {\n        offsetYMax: 25,\n        offsetYMin: -35,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Your Vitamin Stack\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.goToBasket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Purchase vitamin stack\"), React.createElement(\"div\", {\n        className: \"flex-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, getStack().map(function (vitamin) {\n        return React.createElement(Slide, Object.assign({\n          direction: \"down\",\n          in: checked,\n          style: {\n            transformOrigin: '0 0 0'\n          }\n        }, checked ? {\n          timeout: num\n        } : {}, {\n          mountOnEnter: true,\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"flex-child\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, vitamin), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"RDA: \", getVitaminInfo(vitamin).rda)));\n      }, num = num + 100))));\n    }\n  }]);\n\n  return VitaminStack;\n}(React.Component);\n\nexport default VitaminStack;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/VitaminStack.js"],"names":["React","Parallax","Switch","Slide","Button","VitaminStack","vitaminAmazonLink","link","counter","props","getStack","vitamin","getVitaminInfo","code","getTrait","name","report","find","r","trait","vitamins","avoidStack","badStack","i","getScore","push","goToBasket","url","window","open","checked","num","map","transformOrigin","timeout","rda","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport logo from '../logo.svg';\nimport { Parallax } from 'react-scroll-parallax'\nimport Switch from '@material-ui/core/Switch';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\n\n\n\nclass VitaminStack extends React.Component  {\n\n\n    vitaminAmazonLink = () => {\n      let link =  'http://www.amazon.co.uk/gp/aws/cart/add.html?AssociateTag=lolao-21'\n    let counter = 1\n\n   \n    for (const vitamin of this.props.getStack()){\n       link = link + `&ASIN.${counter}=${this.getVitaminInfo(vitamin).code}&Quantity.${counter}=1`\n        \n       ++counter}\n       return link\n    }\n\n    getTrait = name => {\n        return this.props.report.find(r => r.trait === `${name}`)\n    }\n\n\n    // getScore = name => {\n    // return this.props.report.find(r => r.trait === `${name}`).score\n    // }\n\n    getVitaminInfo = name => {\n        return this.props.vitamins.find(r => r.name === `${name}`)\n\n    }\n\n    avoidStack = () => {\n        const badStack  = []\n        for (const i of this.props.report)  {\n            if (this.props.getScore(i.trait) === 4 ) {\n                badStack.push(i.trait)\n            }\n        }\n        return badStack\n    }\n\n    goToBasket = () =>{ const url = this.vitaminAmazonLink();  window.open(url, \"_blank\") }\n\n    // getStack = () => {\n    //     const stack = []\n    //     for (const i of this.props.report)  {\n    //         if (this.getScore(i.trait) < 2 )\n    //     { \n    //         switch (i.trait) {\n    //             case \"Folate\":\n    //             stack.push(\"Folic Acid\");\n    //             default:stack.push(i.trait) }\n    //         }\n    //     }\n    //     return stack\n    //     console.log(stack)\n    // }\n\n\n\n\n    render () {\n        this.vitaminAmazonLink()\n        const {checked, getStack, getScore} = this.props\n        const {getVitaminInfo} = this\n        let num = 1000\n        return (\n\n            <Parallax offsetYMax={25} offsetYMin={-35}>\n                <div className=\"result\">\n                    <h2>Your Vitamin Stack</h2>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.goToBasket}>Purchase vitamin stack</Button>\n                    \n\n                    <div className=\"flex-container\">\n                        {getStack().map(vitamin => \n                        \n                            \n                    \n                            <Slide  direction=\"down\" in={checked}  style={{ transformOrigin: '0 0 0' }}\n                                {...(checked ? { timeout: num } : {})} mountOnEnter unmountOnExit>\n                                <div className=\"flex-child\"> \n                                    <h3>{vitamin}</h3>\n                                    <p>RDA: {getVitaminInfo(vitamin).rda}</p>\n                                    {/* <ul>{getVitaminInfo(vitamin).sources.split(',').map( source =>\n                                        <li>{source}</li>)}\n                                        </ul>\n                                    \n                                    <p>{getVitaminInfo(vitamin).benefits}</p>\n                                    <ul>{getVitaminInfo(vitamin).deficiency.split(',').map(deficiency =>\n                                        <li>{deficiency}</li>)} */}\n                                    {/* </ul> */}\n                                </div>\n                            </Slide>\n                            ,\n                            num = num + 100\n                    )}\n                    </div>\n                </div>\n            </Parallax>\n        )\n    }\n}\n export default VitaminStack"]},"metadata":{},"sourceType":"module"}