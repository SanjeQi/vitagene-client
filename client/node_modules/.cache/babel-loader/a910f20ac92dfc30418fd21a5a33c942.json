{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/VitaminStack.js\";\nimport React from 'react';\nimport logo from \"../logo.svg\";\nimport { Parallax } from 'react-scroll-parallax';\n\nvar VitaminStack =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VitaminStack, _React$Component);\n\n  function VitaminStack() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VitaminStack);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VitaminStack)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checked: false\n    };\n\n    _this.getTrait = function (name) {\n      return _this.props.report.find(function (r) {\n        return r.trait === \"\".concat(name);\n      });\n    };\n\n    _this.getScore = function (name) {\n      return _this.props.report.find(function (r) {\n        return r.trait === \"\".concat(name);\n      }).score;\n    };\n\n    _this.getVitaminInfo = function (name) {\n      return _this.props.vitamins.find(function (r) {\n        return r.name === \"\".concat(name);\n      });\n    };\n\n    _this.getStack = function () {\n      var stack = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.props.report[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var i = _step.value;\n\n          if (_this.getScore(i.trait) < 2) {\n            switch (i.trait) {\n              case \"Folate\":\n                stack.push(\"Folic Acid\");\n                break;\n\n              case \"Skin Pigmentation\":\n                stack.push(\"Vitamin D\");\n                break;\n\n              case \"Sleep duration\":\n                stack.push(\"Melatonin\");\n                break;\n\n              default:\n                stack.push(i.trait);\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return stack;\n    };\n\n    _this.handleChange = function () {\n      _this.setState(function (state) {\n        return {\n          checked: !state.checked\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(VitaminStack, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getScore = this.getScore,\n          getStack = this.getStack,\n          getTrait = this.getTrait,\n          getVitaminInfo = this.getVitaminInfo;\n      return React.createElement(Parallax, {\n        offsetYMax: 25,\n        offsetYMin: -35,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Your Vitamin Stack\"), getStack().map(function (vitamin) {\n        return React.createElement(\"div\", {\n          className: \"info-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          checked: checked,\n          onChange: _this2.handleChange,\n          \"aria-label\": \"Collapse\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), React.createElement(Slide, {\n          direction: \"up\",\n          in: checked,\n          mountOnEnter: true,\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, vitamin), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, getVitaminInfo(vitamin).sources), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, getVitaminInfo(vitamin).rda), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, getVitaminInfo(vitamin).benefits), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, getVitaminInfo(vitamin).toxicity)));\n      })));\n    }\n  }]);\n\n  return VitaminStack;\n}(React.Component);\n\nexport default VitaminStack;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/src/components/VitaminStack.js"],"names":["React","Parallax","VitaminStack","state","checked","getTrait","name","props","report","find","r","trait","getScore","score","getVitaminInfo","vitamins","getStack","stack","i","push","handleChange","setState","map","vitamin","sources","rda","benefits","toxicity","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport logo from '../logo.svg';\nimport { Parallax } from 'react-scroll-parallax'\n\nclass VitaminStack extends React.Component  {\n\n\nstate = {\n        checked: false,\n};\n\n getTrait = name => {\n    return this.props.report.find(r => r.trait === `${name}`)\n}\n\n\ngetScore = name => {\n   return this.props.report.find(r => r.trait === `${name}`).score\n}\n\ngetVitaminInfo = name => {\n    return this.props.vitamins.find(r => r.name === `${name}`)\n\n}\n\n \n\ngetStack = () => {\n    const stack = []\n    for (const i of this.props.report)  {\n        if (this.getScore(i.trait) < 2 )\n       { \n        switch (i.trait) {\n            case \"Folate\":\n            stack.push(\"Folic Acid\");\n            break;\n            case \"Skin Pigmentation\":\n            stack.push(\"Vitamin D\");\n            break;\n            case \"Sleep duration\":\n            stack.push(\"Melatonin\");\n            break;\n            default:stack.push(i.trait) }\n        }\n    }\n    return stack\n}\n\nhandleChange = () => {\n    this.setState(state => ({ checked: !state.checked }));\n  }\n\n\nrender () {\n\nconst {getScore, getStack,getTrait,getVitaminInfo} = this\n\nreturn (\n\n    <Parallax\n    offsetYMax={25}\n    offsetYMin={-35}\n    >\n<div className=\"result\">\n    <h2>Your Vitamin Stack</h2>\n     {getStack().map(vitamin => \n\n      <div className=\"info-container\"> \n       <Switch checked={checked} onChange={this.handleChange} aria-label=\"Collapse\" />\n          <Slide direction=\"up\" in={checked} mountOnEnter unmountOnExit>\n          <p>{vitamin}</p>\n          <p>{getVitaminInfo(vitamin).sources}</p>\n          <p>{getVitaminInfo(vitamin).rda}</p>\n          <p>{getVitaminInfo(vitamin).benefits}</p>\n          <p>{getVitaminInfo(vitamin).toxicity}</p>\n          </Slide>\n      </div>\n      )}\n\n    \n</div>\n</Parallax>\n    )\n}\n}\n export default VitaminStack"]},"metadata":{},"sourceType":"module"}