{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/src/components/Form.js\";\nimport React, { Component } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport Zoom from '@material-ui/core/Zoom';\nimport Button from '@material-ui/core/Button';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    _classCallCheck(this, Form);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Form).apply(this, arguments));\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var settings = {\n        dots: true,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        arrows: false\n      };\n      var _this$props = this.props,\n          handleChange = _this$props.handleChange,\n          handleSubmit = _this$props.handleSubmit;\n      var content = [{\n        question: 'vegan?',\n        label: 'vegan'\n      }, {\n        question: 'of African descent?',\n        label: 'african'\n      }, {\n        question: 'pregnant or trying?',\n        label: 'pregnant'\n      }];\n      var link = {\n        color: '',\n        boxShadow: 'none'\n      };\n      return React.createElement(Zoom, {\n        in: true,\n        style: {\n          transitionDelay: '200ms'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"A few optional questions to further personalize your results..\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"primary\",\n        onClick: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"skip\")), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Are you...\"), React.createElement(Slider, Object.assign({\n        ref: function ref(slider) {\n          return _this.slider = slider;\n        }\n      }, settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), content.map(function (question) {\n        return React.createElement(\"div\", {\n          className: \"slider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          component: \"fieldset\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(FormLabel, {\n          component: \"legend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, question.question), React.createElement(RadioGroup, {\n          \"aria-label\": question.label,\n          name: question.label,\n          onChange: function onChange(event) {\n            handleChange(event);\n\n            _this.slider.slickNext();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          value: \"yes\",\n          control: React.createElement(Radio, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }),\n          label: \"Yes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          value: \"no\",\n          control: React.createElement(Radio, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }),\n          label: \"No\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }))));\n      }))));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/src/components/Form.js"],"names":["React","Component","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Slider","Zoom","Button","Form","settings","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","props","handleChange","handleSubmit","content","question","label","link","color","boxShadow","transitionDelay","slider","map","event","slickNext"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\"\nimport Slider from \"react-slick\";\nimport Zoom from '@material-ui/core/Zoom';\nimport Button from '@material-ui/core/Button';\n\nclass Form extends Component {\n\n  \n   render() {\n\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      arrows: false\n    };\n\n    const {handleChange, handleSubmit} = this.props\n\n    const content =  [{\n      question: 'vegan?',\n      label: 'vegan'\n    },\n    { question: 'of African descent?',\n      label: 'african'\n    },\n    { question: 'pregnant or trying?',\n      label: 'pregnant'\n    }]\n\n    const link = {\n      color: '',\n      boxShadow: 'none'\n\n    }\n\n    return (\n      <Zoom in={true} style={{ transitionDelay: '200ms'}}>\n        <div className=\"form\">\n          <p>A few optional questions to further personalize your results..\n            <br />\n            <br />\n            <Button color=\"primary\" onClick={handleSubmit}>skip</Button>\n          </p>\n          <h2>Are you...</h2>\n          <Slider ref={slider => (this.slider = slider)} {...settings}>\n            {content.map(question =>\n              <div className=\"slider\">\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">{question.question}</FormLabel>\n                  <RadioGroup\n                  aria-label={question.label}\n                  name={question.label}\n                  onChange={(event) => {handleChange(event);\n                    this.slider.slickNext()}}>\n                  <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\n                  <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\n                  </RadioGroup>\n              </FormControl>\n              </div>\n              )}\n            </Slider> \n        </div>\n       </Zoom>\n     );\n   }\n }\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}