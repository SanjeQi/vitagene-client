{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/src/components/YourGenome.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../canvasjs.react';\nimport Slide from '@material-ui/core/Slide';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nvar YourGenome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YourGenome, _Component);\n\n  function YourGenome() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, YourGenome);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(YourGenome)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getResultInfo = function (vitamin) {\n      switch (vitamin.score) {\n        case 0:\n          return 'Lower blood serum level';\n\n        case 1:\n          return 'Slightly lower serum level';\n\n        case 2:\n          return 'Intermediate';\n\n        case 3:\n          return 'Slightly higher serum level';\n\n        case 4:\n          return 'Higher blood serum level';\n\n        default:\n          return 'n/a';\n      }\n    };\n\n    _this.populateChart = function () {\n      var array = [];\n\n      _this.props.report.map(function (vitamin) {\n        return array.push({\n          y: vitamin.score + 1,\n          label: vitamin.trait\n        });\n      });\n\n      return array;\n    };\n\n    return _this;\n  }\n\n  _createClass(YourGenome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.onPage('genome')) {\n        setTimeout(function () {\n          return document.getElementById(\"genome\").scrollIntoView({\n            behavior: \"smooth\",\n            block: \"start\"\n          });\n        }, 300);\n      }\n    }\n  }, {\n    key: \"addSymbols\",\n    value: function addSymbols(e) {\n      var suffixes = [\"\", \"K\", \"M\", \"B\"];\n      var order = Math.max(Math.floor(Math.log(e.value) / Math.log(1000)), 0);\n      if (order > suffixes.length - 1) order = suffixes.length - 1;\n      var suffix = suffixes[order];\n      return CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onPage = _this$props.onPage,\n          setPage = _this$props.setPage,\n          pageOpen = _this$props.pageOpen;\n      var addSymbols = this.addSymbols,\n          populateChart = this.populateChart;\n      var options = {\n        animationEnabled: onPage('genome'),\n        animationDuration: 2000,\n        backgroundColor: \"rgba(255,0,0,0)\",\n        colorSet: \"colorSet2\",\n        theme: \"light2\",\n        title: {\n          fontColor: \"black\",\n          fontFamily: \"raleway\"\n        },\n        axisX: {\n          reversed: true,\n          fontFamily: \"raleway\",\n          labelFontFamily: \"raleway\",\n          labelFontColor: \"white\"\n        },\n        axisY: {\n          title: \"Typical blood serum concentration for your genotype (0-4)\",\n          labelFormatter: addSymbols,\n          labelFontFamily: \"raleway\",\n          labelFontColor: \"white\",\n          titleFontFamily: \"raleway\",\n          titleFontColor: \"white\",\n          titleFontSize: 14\n        },\n        data: [{\n          type: \"bar\",\n          dataPoints: _toConsumableArray(populateChart())\n        }]\n      };\n      return React.createElement(\"div\", {\n        className: \"result-pheno\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        id: \"genome\",\n        name: \"genome\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Your Phenotype Results\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"These are the results of the average blood serum concentration levels for your genotype of each tested micronutrient based . Each nutrient is assigned a score that corresponds to the following: \"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"1 - Lower blood serum level\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"2 - Slightly lower serum level\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"3 - Intermediate\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"4 - Slightly higher serum level\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"5 - Higher blood serum level\")), React.createElement(\"div\", {\n        className: \"info-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Slide, {\n        direction: \"down\",\n        in: pageOpen('genome'),\n        style: {\n          transformOrigin: '0 0 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(CanvasJSChart, {\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        id: \"section07\",\n        className: \"demo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        onClick: function onClick() {\n          setPage('vitamins');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), \"Click to scroll\")));\n    }\n  }]);\n\n  return YourGenome;\n}(Component);\n\nexport default YourGenome;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod5/vitagene-client/vitagene-react-client/client/src/components/YourGenome.js"],"names":["React","Component","CanvasJSReact","Slide","CanvasJS","CanvasJSChart","YourGenome","getResultInfo","vitamin","score","populateChart","array","props","report","map","push","y","label","trait","onPage","setTimeout","document","getElementById","scrollIntoView","behavior","block","e","suffixes","order","Math","max","floor","log","value","length","suffix","formatNumber","pow","setPage","pageOpen","addSymbols","options","animationEnabled","animationDuration","backgroundColor","colorSet","theme","title","fontColor","fontFamily","axisX","reversed","labelFontFamily","labelFontColor","axisY","labelFormatter","titleFontFamily","titleFontColor","titleFontSize","data","type","dataPoints","transformOrigin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CanvasJSReact from '../canvasjs.react'\nimport Slide from '@material-ui/core/Slide';\nconst CanvasJS = CanvasJSReact.CanvasJS;\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\n\nclass YourGenome extends Component {\n\n    getResultInfo = vitamin => {\n        switch (vitamin.score) {\n            case 0:\n            return 'Lower blood serum level'\n            \n            case 1:\n            return  'Slightly lower serum level'\n          \n            case 2:\n            return 'Intermediate'\n        \n            case 3:\n            return 'Slightly higher serum level'\n           \n            case 4:\n            return 'Higher blood serum level'   \n            \n            default:\n            return 'n/a'\n        }\n    }\n\n\n    populateChart = () => {\n        let array = []\n        this.props.report.map(vitamin =>\n            array.push({y: vitamin.score+1, label: vitamin.trait})\n        )\n        return array\n    }\n    \n\n    componentDidMount(){\n        if (this.props.onPage('genome')) {\n            setTimeout(() => document.getElementById(\"genome\").scrollIntoView({behavior: \"smooth\", block: \"start\"}), 300)\n        }\n    }\n\n    addSymbols(e){\n        let suffixes = [\"\", \"K\", \"M\", \"B\"];\n        var order = Math.max(Math.floor(Math.log(e.value) / Math.log(1000)), 0);\n        if (order > suffixes.length - 1)\n            order = suffixes.length - 1;\n        let suffix = suffixes[order];\n        return CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;\n    }\n\n    \n\n\n    render () {\n        const {onPage,setPage, pageOpen} = this.props\n        const {addSymbols, populateChart} = this\n        \n        const options = {\n            animationEnabled: onPage('genome'),\n            animationDuration: 2000,\n            backgroundColor: \"rgba(255,0,0,0)\",\n            colorSet:  \"colorSet2\",\n            theme: \"light2\",\n            title:{\n                fontColor: \"black\",\n                fontFamily: \"raleway\",\n            },\n            axisX: {\n                \n                reversed: true,\n                fontFamily: \"raleway\",\n                labelFontFamily: \"raleway\",\n                labelFontColor: \"white\",\n            \n                \n            },\n            axisY: {\n                title: \"Typical blood serum concentration for your genotype (0-4)\",\n                labelFormatter: addSymbols,\n                labelFontFamily: \"raleway\",\n                labelFontColor: \"white\",\n                titleFontFamily: \"raleway\",\n                titleFontColor: \"white\",\n                titleFontSize: 14\n            },\n            data: [{\n                type: \"bar\",\n                dataPoints: [...populateChart()]\n            }]\n        }\n\n\n\n        return (\n      \n        <div className=\"result-pheno\">\n            <h2 id=\"genome\" name=\"genome\">Your Phenotype Results</h2> \n            <p>These are the results of the average blood serum concentration levels for your genotype of each tested micronutrient based .\n                 Each nutrient is assigned a score that corresponds to the following: </p>\n            <ul>\n                <li>1 - Lower blood serum level</li> \n                <li>2 - Slightly lower serum level</li> \n                <li>3 - Intermediate</li> \n                <li>4 - Slightly higher serum level</li> \n                <li>5 - Higher blood serum level</li> \n            </ul>\n            <div  className=\"info-container\"> \n                <Slide direction=\"down\" in={pageOpen('genome')}  style={{ transformOrigin: '0 0 0' }}> \n                    <CanvasJSChart options ={options}/>\n                </Slide>\n            </div>\n            \n            <div id=\"section07\" className=\"demo\">\n                <p onClick={() => {setPage('vitamins')}}><span></span><span></span><span></span>Click to scroll</p>\n            </div>  \n        </div>\n        )}\n        \n}\n\n\n export default YourGenome\n"]},"metadata":{},"sourceType":"module"}